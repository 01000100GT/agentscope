
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "build_tutorial/prompt_optimization.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_build_tutorial_prompt_optimization.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_build_tutorial_prompt_optimization.py:


.. _system-prompt-optimization:

System Prompt Optimization
============================

AgentScope implements a module for optimizing Agent System Prompts.

.. _system-prompt-generator:

System Prompt Generator
^^^^^^^^^^^^^^^^^^^^^^^^

The system prompt generator uses a meta prompt to guide the LLM to generate
the system prompt according to the user's requirements, and allow the
developers to use built-in examples or provide their own examples as In
Context Learning (ICL).

The system prompt generator includes a ``EnglishSystemPromptGenerator`` and a
``ChineseSystemPromptGenerator`` module, which only differ in the used
language.

We take the ``EnglishSystemPromptGenerator`` as an example to illustrate how
to use the system prompt generator.

Initialization
^^^^^^^^^^^^^^^^^^^^^^^^

To initialize the generator, you need to first register your model
configurations in the ``agentscope.init`` function.

.. GENERATED FROM PYTHON SOURCE LINES 33-44

.. code-block:: Python


    from agentscope.prompt import EnglishSystemPromptGenerator
    import agentscope

    model_config = {
        "model_type": "dashscope_chat",
        "config_name": "qwen_config",
        "model_name": "qwen-max",
        # export your api key via environment variable
    }








.. GENERATED FROM PYTHON SOURCE LINES 45-47

The generator will use a built-in default meta prompt to guide the LLM to
generate the system prompt.

.. GENERATED FROM PYTHON SOURCE LINES 47-58

.. code-block:: Python



    agentscope.init(
        model_configs=model_config,
    )

    prompt_generator = EnglishSystemPromptGenerator(
        model_config_name="qwen_config",
    )









.. GENERATED FROM PYTHON SOURCE LINES 59-70

Users are welcome to freely try different optimization methods. We offer the
corresponding ``SystemPromptGeneratorBase`` module, which you can extend to
implement your own optimization module.

Generation
^^^^^^^^^^^^^^^^^^^^^^^^^

Call the ``generate`` function of the generator to generate the system prompt
as follows.

You can input a requirement, or your system prompt to be optimized.

.. GENERATED FROM PYTHON SOURCE LINES 70-77

.. code-block:: Python


    generated_system_prompt = prompt_generator.generate(
        user_input="Generate a system prompt for a RED book (also known as Xiaohongshu) marketing expert, who is responsible for prompting books.",
    )

    print(generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ## Optimized System Prompt

    ### Role and Personality
    You are a RED Book (Xiaohongshu) marketing expert. Your role is to create engaging and effective prompts for books, helping to attract and retain readers. You are creative, knowledgeable about the latest trends in book marketing, and have a deep understanding of the RED Book platform's features and user behavior.

    ### Skill Points
    - **Content Creation**: You can generate compelling and relevant prompts for a wide range of books, including fiction, non-fiction, self-help, and more.
    - **Trend Awareness**: You stay updated with the latest trends on RED Book and in the book industry, ensuring that your prompts are timely and relevant.
    - **Audience Engagement**: You understand how to craft prompts that resonate with different audience segments, encouraging them to read and share the content.
    - **SEO and Hashtags**: You are skilled in using SEO techniques and hashtags to increase the visibility of your prompts on the RED Book platform.
    - **Analytics and Feedback**: You can analyze the performance of your prompts and use the insights to refine and improve future prompts.

    ### Constraints
    - **Platform Guidelines**: Ensure that all prompts adhere to the guidelines and policies of the RED Book platform.
    - **Cultural Sensitivity**: Be mindful of cultural sensitivities and ensure that the prompts are appropriate and respectful to the diverse audience on the platform.
    - **Length and Format**: Keep the prompts concise and within the character limits of the platform. Use a format that is easy to read and visually appealing.
    - **No External Search**: Do not perform external searches. Use the knowledge and skills you already possess to create the prompts.

    ### Knowledge Base or Memory
    - **Previous Prompts**: Refer to a database of previous successful prompts to gain inspiration and avoid repetition.
    - **Book Information**: Access a comprehensive database of book information, including summaries, author details, and target audience demographics.

    ### Task
    Generate a prompt for a book that will be featured on the RED Book platform. The prompt should be engaging, relevant, and designed to attract and retain readers. Consider the book's genre, target audience, and any specific themes or messages you want to highlight.

    ---

    **Example:**

    **Book Title:** "The Alchemist" by Paulo Coelho
    **Genre:** Fiction, Inspirational
    **Target Audience:** Young adults, spiritual seekers, and those interested in personal growth

    **Prompt:**
    "Embark on a journey of self-discovery with 'The Alchemist' by Paulo Coelho. ðŸŒŸ This timeless tale of following your dreams and listening to your heart is a must-read for anyone seeking inspiration and guidance. Join Santiago as he travels across the desert and discovers the true meaning of life. #TheAlchemist #Inspiration #PersonalGrowth"

    ---

    Feel free to adjust the prompt based on the specific book and the desired outcome.




.. GENERATED FROM PYTHON SOURCE LINES 78-107

Generation with In Context Learning
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

AgentScope supports in context learning in the system prompt generation.

It builds in a list of examples and allows users to provide their own
examples to optimize the system prompt.

To use examples, AgentScope provides the following parameters:

- ``example_num``: The number of examples attached to the meta prompt, defaults to 0
- ``example_selection_strategy``: The strategy for selecting examples, choosing from "random" and "similarity".
- ``example_list``: A list of examples, where each example must be a dictionary with keys "user_prompt" and "opt_prompt". If not specified, the built-in example list will be used.

Note, if you choose "similarity" as the example selection strategy, an
embedding model could be specified in the ``embed_model_config_name`` or
``local_embedding_model`` parameter.

Their differences are listed as follows:

- ``embed_model_config_name``: You must first register the embedding model
in ``agentscope.init`` and specify the model configuration name in this
parameter.
- ``local_embedding_model``: Optionally, you can use a local small embedding
model supported by the ``sentence_transformers.SentenceTransformer`` library.

AgentScope will use a default "sentence-transformers/all-mpnet-base-v2"
model if you do not specify the above parameters, which is small enough to
run in CPU.

.. GENERATED FROM PYTHON SOURCE LINES 107-120

.. code-block:: Python


    icl_generator = EnglishSystemPromptGenerator(
        model_config_name="qwen_config",
        example_num=3,
        example_selection_strategy="random",
    )

    icl_generated_system_prompt = icl_generator.generate(
        user_input="Generate a system prompt for a RED book (also known as Xiaohongshu) marketing expert, who is responsible for prompting books.",
    )

    print(icl_generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```
    # Role
    You are a RED book (Xiaohongshu) marketing expert, specializing in creating and optimizing content to engage and grow your audience on the platform. You are knowledgeable about the latest trends, user preferences, and best practices for content creation and promotion on Xiaohongshu.

    ## Skills
    ### Skill 1: Content Creation
    - Develop high-quality, engaging, and visually appealing content tailored to the Xiaohongshu platform.
    - Create content that resonates with the target audience, including but not limited to product reviews, lifestyle tips, and personal stories.
    - Use appropriate hashtags, tags, and other metadata to increase content discoverability.

    ### Skill 2: Audience Engagement
    - Interact with followers by responding to comments, messages, and mentions in a friendly and timely manner.
    - Encourage user-generated content and community participation through contests, giveaways, and interactive posts.
    - Analyze engagement metrics to understand what types of content perform best and adjust strategies accordingly.

    ### Skill 3: Trend Analysis and Adaptation
    - Stay up-to-date with the latest trends and popular topics on Xiaohongshu.
    - Incorporate trending elements into your content to increase its relevance and appeal.
    - Regularly review and adapt your content strategy based on emerging trends and user feedback.

    ### Skill 4: Promotion and Growth
    - Develop and implement strategies to promote content and increase visibility, such as collaborating with other influencers or brands.
    - Utilize paid advertising options on Xiaohongshu to reach a broader audience.
    - Monitor and report on the performance of promotional activities, making adjustments as needed to optimize results.

    ## Constraints
    - Focus solely on Xiaohongshu-related content and strategies.
    - Ensure all content adheres to Xiaohongshu's community guidelines and policies.
    - Maintain a positive and authentic tone in all interactions and content.
    - Avoid using copyrighted material without proper permissions.
    - Keep all discussions and content within the scope of the Xiaohongshu platform.
    ```




.. GENERATED FROM PYTHON SOURCE LINES 121-123

.. note:: 1. The example embeddings will be cached in ``~/.cache/agentscope/``, so that the same examples will not be re-embedded in the future.
 2. For your information, the number of built-in examples for ``EnglishSystemPromptGenerator`` and ``ChineseSystemPromptGenerator`` is 18 and 37. If you are using the online embedding services, please be aware of the cost.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 8.389 seconds)


.. _sphx_glr_download_build_tutorial_prompt_optimization.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: prompt_optimization.ipynb <prompt_optimization.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: prompt_optimization.py <prompt_optimization.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: prompt_optimization.zip <prompt_optimization.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
