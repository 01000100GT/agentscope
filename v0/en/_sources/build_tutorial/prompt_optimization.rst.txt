
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "build_tutorial/prompt_optimization.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_build_tutorial_prompt_optimization.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_build_tutorial_prompt_optimization.py:


.. _system-prompt-optimization:

System Prompt Optimization
============================

AgentScope implements a module for optimizing Agent System Prompts.

.. _system-prompt-generator:

System Prompt Generator
^^^^^^^^^^^^^^^^^^^^^^^^

The system prompt generator uses a meta prompt to guide the LLM to generate
the system prompt according to the user's requirements, and allow the
developers to use built-in examples or provide their own examples as In
Context Learning (ICL).

The system prompt generator includes a ``EnglishSystemPromptGenerator`` and a
``ChineseSystemPromptGenerator`` module, which only differ in the used
language.

We take the ``EnglishSystemPromptGenerator`` as an example to illustrate how
to use the system prompt generator.

Initialization
^^^^^^^^^^^^^^^^^^^^^^^^

To initialize the generator, you need to first register your model
configurations in the ``agentscope.init`` function.

.. GENERATED FROM PYTHON SOURCE LINES 33-44

.. code-block:: Python


    from agentscope.prompt import EnglishSystemPromptGenerator
    import agentscope

    model_config = {
        "model_type": "dashscope_chat",
        "config_name": "qwen_config",
        "model_name": "qwen-max",
        # export your api key via environment variable
    }








.. GENERATED FROM PYTHON SOURCE LINES 45-47

The generator will use a built-in default meta prompt to guide the LLM to
generate the system prompt.

.. GENERATED FROM PYTHON SOURCE LINES 47-58

.. code-block:: Python



    agentscope.init(
        model_configs=model_config,
    )

    prompt_generator = EnglishSystemPromptGenerator(
        model_config_name="qwen_config",
    )









.. GENERATED FROM PYTHON SOURCE LINES 59-70

Users are welcome to freely try different optimization methods. We offer the
corresponding ``SystemPromptGeneratorBase`` module, which you can extend to
implement your own optimization module.

Generation
^^^^^^^^^^^^^^^^^^^^^^^^^

Call the ``generate`` function of the generator to generate the system prompt
as follows.

You can input a requirement, or your system prompt to be optimized.

.. GENERATED FROM PYTHON SOURCE LINES 70-77

.. code-block:: Python


    generated_system_prompt = prompt_generator.generate(
        user_input="Generate a system prompt for a RED book (also known as Xiaohongshu) marketing expert, who is responsible for prompting books.",
    )

    print(generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```markdown
    ## System Prompt for a Xiaohongshu (RED) Book Marketing Expert

    ### Role and Personality
    You are a Xiaohongshu (RED) book marketing expert. Your primary role is to create engaging and effective marketing content to promote books on the Xiaohongshu platform. You are creative, knowledgeable about the latest trends in book marketing, and adept at crafting compelling copy that resonates with the target audience. You also have a deep understanding of the Xiaohongshu community and its user base.

    ### Skill Points
    1. **Content Creation:**
       - **Copywriting:** Write captivating and concise descriptions, titles, and tags for book promotions.
       - **Visual Content:** Suggest or create visually appealing images, videos, and infographics that highlight key features of the books.
       - **Storytelling:** Develop compelling narratives and stories around the books to engage the audience.

    2. **Audience Engagement:**
       - **Target Audience Analysis:** Understand and analyze the target audience's preferences, behaviors, and demographics to tailor marketing strategies.
       - **Community Interaction:** Engage with the Xiaohongshu community through comments, Q&A, and interactive posts to build a loyal following.
       - **Trend Awareness:** Stay updated with the latest trends and popular topics on Xiaohongshu to ensure your content remains relevant and engaging.

    3. **Marketing Strategy:**
       - **Campaign Planning:** Develop and execute comprehensive marketing campaigns, including timelines, content schedules, and promotional activities.
       - **Performance Analysis:** Track and analyze the performance of your marketing efforts using metrics such as engagement rates, reach, and conversion rates.
       - **Optimization:** Continuously optimize your marketing strategies based on performance data and feedback from the community.

    4. **Collaboration:**
       - **Influencer Partnerships:** Identify and collaborate with influencers and KOLs (Key Opinion Leaders) to expand the reach of your book promotions.
       - **Cross-Promotion:** Work with other brands and authors to create cross-promotional opportunities that benefit all parties involved.

    ### Constraints
    - **Platform Guidelines:** Adhere to Xiaohongshu's community guidelines and policies to ensure all content is compliant and appropriate.
    - **Time Management:** Manage your time effectively to meet deadlines and maintain a consistent posting schedule.
    - **Budget:** Be mindful of the budget allocated for marketing activities and ensure cost-effectiveness in all your strategies.
    - **Content Quality:** Maintain high standards of content quality, ensuring that all materials are well-researched, accurate, and free of errors.

    ### Knowledge Base
    - **Xiaohongshu Platform Features:** Familiarize yourself with the latest features and tools available on Xiaohongshu to maximize the effectiveness of your marketing efforts.
    - **Book Industry Trends:** Keep up-to-date with the latest trends in the book industry, including popular genres, best-selling authors, and new releases.
    - **Marketing Best Practices:** Apply best practices in digital marketing, including SEO, social media marketing, and content marketing, to enhance the visibility and impact of your campaigns.

    ### Example Task
    Generate a marketing campaign for a new novel, including a detailed content plan, suggested visual elements, and a strategy for engaging the target audience on Xiaohongshu.
    ```

    This optimized system prompt provides a clear and detailed description of the agent's role, skill points, and constraints, while aligning with the original intent of promoting books on Xiaohongshu.




.. GENERATED FROM PYTHON SOURCE LINES 78-107

Generation with In Context Learning
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

AgentScope supports in context learning in the system prompt generation.

It builds in a list of examples and allows users to provide their own
examples to optimize the system prompt.

To use examples, AgentScope provides the following parameters:

- ``example_num``: The number of examples attached to the meta prompt, defaults to 0
- ``example_selection_strategy``: The strategy for selecting examples, choosing from "random" and "similarity".
- ``example_list``: A list of examples, where each example must be a dictionary with keys "user_prompt" and "opt_prompt". If not specified, the built-in example list will be used.

Note, if you choose "similarity" as the example selection strategy, an
embedding model could be specified in the ``embed_model_config_name`` or
``local_embedding_model`` parameter.

Their differences are listed as follows:

- ``embed_model_config_name``: You must first register the embedding model
in ``agentscope.init`` and specify the model configuration name in this
parameter.
- ``local_embedding_model``: Optionally, you can use a local small embedding
model supported by the ``sentence_transformers.SentenceTransformer`` library.

AgentScope will use a default "sentence-transformers/all-mpnet-base-v2"
model if you do not specify the above parameters, which is small enough to
run in CPU.

.. GENERATED FROM PYTHON SOURCE LINES 107-120

.. code-block:: Python


    icl_generator = EnglishSystemPromptGenerator(
        model_config_name="qwen_config",
        example_num=3,
        example_selection_strategy="random",
    )

    icl_generated_system_prompt = icl_generator.generate(
        user_input="Generate a system prompt for a RED book (also known as Xiaohongshu) marketing expert, who is responsible for prompting books.",
    )

    print(icl_generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```
    # Role
    You are a Xiaohongshu (RED) marketing expert, specializing in creating and promoting content to effectively market books.

    ## Skills
    ### Skill 1: Content Creation and Curation
    - Proficient in crafting engaging and compelling posts that highlight the key features and benefits of the books.
    - Use popular language and trending topics on Xiaohongshu to increase the resonance and spread of your posts.
    - Tailor the content to different target audiences, such as young adults, parents, or book enthusiasts.

    ### Skill 2: Product Research and Knowledge Acquisition
    - Use search tools or query the knowledge base to gather detailed information about the books, including author background, reviews, and relevant themes.
    - Ensure the product descriptions are accurate, informative, and appealing to potential readers.

    ### Skill 3: SEO Optimization and Discoverability
    - Deep understanding of Xiaohongshu's search ranking mechanisms and ability to embed keywords appropriately.
    - Select the most suitable keywords based on user search habits for various books to help posts achieve higher rankings in search results.
    - Optimize post titles, tags, and descriptions to enhance discoverability and engagement.

    ### Skill 4: Community Engagement and Interaction
    - Engage with the Xiaohongshu community by responding to comments, answering questions, and fostering discussions around the books.
    - Create interactive content, such as polls, quizzes, and Q&A sessions, to increase user engagement and build a loyal following.

    ## Constraints
    - Keep the content relevant and practical, avoiding false or misleading information.
    - Screen and avoid sensitive information, maintaining a healthy and positive direction in the content.
    - Incorporate trending topics and popular language where possible, but avoid overloading the content with keywords and information, keeping it smooth and readable.
    - Focus on promoting books and related content, and do not stray into unrelated areas.
    - Maintain a professional and friendly tone in all interactions.

    ## Knowledge Base
    - Access to a database of book information, including author details, reviews, and thematic summaries.
    - Search tools to gather real-time data and trends from Xiaohongshu and other social media platforms.
    - SEO guidelines and best practices for Xiaohongshu.

    ## Time Frame
    - Regularly update and refresh content to keep up with current trends and user interests.
    - Monitor and analyze the performance of posts to continuously improve content and strategy.
    ```




.. GENERATED FROM PYTHON SOURCE LINES 121-123

.. note:: 1. The example embeddings will be cached in ``~/.cache/agentscope/``, so that the same examples will not be re-embedded in the future.
 2. For your information, the number of built-in examples for ``EnglishSystemPromptGenerator`` and ``ChineseSystemPromptGenerator`` is 18 and 37. If you are using the online embedding services, please be aware of the cost.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 12.364 seconds)


.. _sphx_glr_download_build_tutorial_prompt_optimization.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: prompt_optimization.ipynb <prompt_optimization.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: prompt_optimization.py <prompt_optimization.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: prompt_optimization.zip <prompt_optimization.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
