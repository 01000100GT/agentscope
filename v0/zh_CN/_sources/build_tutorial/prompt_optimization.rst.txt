
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "build_tutorial/prompt_optimization.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_build_tutorial_prompt_optimization.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_build_tutorial_prompt_optimization.py:


.. _system-prompt-optimization:

系统提示优化
============================

AgentScope 实现了一个用于优化智能体系统提示的模块。

.. _system-prompt-generator:

系统提示生成器
^^^^^^^^^^^^^^^^^^^^^^^^

系统提示生成器使用元提示（Meta prompt）来指导模型根据用户的要求生成系统提示，并允许开发人员使用内置示例或提供自己的示例作为上下文学习（ICL）。

系统提示生成器包括一个 `EnglishSystemPromptGenerator` 和一个 `ChineseSystemPromptGenerator` 模块，它们只在使用的语言上有所不同。

我们以 `ChineseSystemPromptGenerator` 为例,说明如何使用系统提示生成器。

初始化
^^^^^^^^^^^^^^^^^^^^^^^^

要初始化生成器,你需要首先在 `agentscope.init` 函数中注册你的模型配置。

.. GENERATED FROM PYTHON SOURCE LINES 26-37

.. code-block:: Python


    from agentscope.prompt import ChineseSystemPromptGenerator
    import agentscope

    model_config = {
        "model_type": "dashscope_chat",
        "config_name": "qwen_config",
        "model_name": "qwen-max",
        # 通过环境变量导出你的 api 密钥
    }








.. GENERATED FROM PYTHON SOURCE LINES 38-40

生成器将使用内置的默认元提示来指导大语言模型生成系统提示。


.. GENERATED FROM PYTHON SOURCE LINES 40-50

.. code-block:: Python


    agentscope.init(
        model_configs=model_config,
    )

    prompt_generator = ChineseSystemPromptGenerator(
        model_config_name="qwen_config",
    )









.. GENERATED FROM PYTHON SOURCE LINES 51-59

我们欢迎用户自由尝试不同的优化方法。我们提供了相应的 `SystemPromptGeneratorBase` 模块，可以通过继承来实现自定义的系统提示生成器。

生成系统提示
^^^^^^^^^^^^^^^^^^^^^^^^^

调用生成器的 `generate` 函数来生成系统提示，如下所示。

可以输入一个需求，或者要优化的系统提示。

.. GENERATED FROM PYTHON SOURCE LINES 59-66

.. code-block:: Python


    generated_system_prompt = prompt_generator.generate(
        user_input="为一位小红书营销专家生成系统提示，他负责推广书籍。",
    )

    print(generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```markdown
    ## 系统提示

    ### 角色描述
    你是一位小红书营销专家，专注于通过创意和引人入胜的内容来推广书籍。你的目标是吸引潜在读者的注意力，提高书籍的知名度，并最终促进销售。

    ### 技能点
    - **内容创作**：能够撰写吸引人的标题、封面文案以及详细而有趣的书籍介绍。
    - **视觉设计建议**：给出关于如何使用图片或视频来增强帖子吸引力的意见。
    - **趋势分析**：了解当前流行的话题标签（#），并能够根据这些趋势调整内容策略。
    - **互动管理**：知道如何有效地与粉丝互动，包括回复评论、发起话题讨论等。
    - **数据分析**：能够解读基本的数据指标，如点赞数、分享次数及阅读量，从而优化未来的营销活动。

    ### 限制条件
    - 所有推荐的营销策略都必须遵守小红书平台规则。
    - 不得使用任何侵犯版权的方式（例如未经许可直接复制他人的作品）来进行推广。
    - 避免使用过于激进或不恰当的语言风格，保持正面积极的态度。
    - 推广过程中应注重诚信，不得发布虚假信息或夸大其词。

    ### 工具与资源
    - 可以利用外部搜索引擎查找相关资料或灵感来源。
    - 建议定期查阅官方发布的最新指南和最佳实践案例以保持知识更新。
    ```

    这个优化后的system prompt不仅明确了角色定位——即一位专门在小红书上进行书籍推广的营销专家，还详细列出了所需的技能点，同时设定了合理的限制条件。此外，它还指出了可以利用哪些工具来辅助工作，确保了任务执行的有效性和合规性。




.. GENERATED FROM PYTHON SOURCE LINES 67-86

上下文学习（ICL）
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

AgentScope 在系统提示生成中支持上下文学习。

要使用示例，AgentScope 提供了以下参数:

- `example_num`: 附加到元提示的示例数量，默认为 0
- `example_selection_strategy`: 选择示例的策略，可选 "random" 和 "similarity"。
- `example_list`: 一个示例列表，其中每个示例必须是一个带有键 "user_prompt" 和 "opt_prompt" 的字典。如果未指定,将使用内置的示例列表。

注意，如果你选择 "similarity" 作为示例选择策略，你需要在 `embed_model_config_name` 或 `local_embedding_model` 参数中指定一个嵌入模型。

它们的区别如下:

- `embed_model_config_name`: 你必须先在 `agentscope.init` 中注册嵌入模型，并在此参数中指定模型配置名称。
- `local_embedding_model`: 或者，你可以使用 `sentence_transformers.SentenceTransformer` 库支持的本地小型嵌入模型。

如果你不指定上述参数，AgentScope 将使用默认的 "sentence-transformers/all-mpnet-base-v2" 模型，该模型可在 CPU 上运行。

.. GENERATED FROM PYTHON SOURCE LINES 86-99

.. code-block:: Python


    icl_generator = ChineseSystemPromptGenerator(
        model_config_name="qwen_config",
        example_num=3,
        example_selection_strategy="random",
    )

    icl_generated_system_prompt = icl_generator.generate(
        user_input="为一位小红书营销专家生成系统提示，他负责推广书籍。",
    )

    print(icl_generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```markdown
    # 角色
    你是小红书平台上的营销专家，专注于书籍推广。你拥有丰富的社交媒体运营经验和对图书市场的深刻理解，擅长通过创意内容吸引读者，并促进书籍销售。

    ## 技能
    ### 技能1: 创意内容策划
    - 根据目标读者群体和书籍特点，设计吸引人的标题、封面图和文案。
    - 利用热门话题和趋势，增加内容的曝光度和互动性。
    - 与作者或出版社合作，获取独家内容或幕后故事，提升内容的独特性和吸引力。

    ### 技能2: 社交媒体运营
    - 熟练掌握小红书平台的各种功能和算法，优化发布时间和频率。
    - 通过数据分析工具监测内容表现，调整策略以提高用户参与度。
    - 与粉丝建立良好的互动关系，及时回应评论和私信，增强用户粘性。

    ### 技能3: 书籍推广策略
    - 结合市场调研和用户反馈，制定全面的书籍推广计划。
    - 利用KOL（关键意见领袖）和社群影响力，扩大书籍的传播范围。
    - 组织线上线下的读书活动，如直播分享会、签售会等，增加书籍的曝光度和销量。

    ### 技能4: 跨平台联动
    - 与其他社交媒体平台（如微博、抖音等）进行联动，实现多渠道推广。
    - 与书店、图书馆等线下机构合作，举办联合推广活动。
    - 利用搜索引擎优化（SEO）技巧，提高书籍在搜索结果中的排名。

    ## 限制条件
    - 仅讨论与书籍推广相关的内容。
    - 所有内容必须符合小红书社区规范，避免使用违规或敏感词汇。
    - 推广策略应基于真实数据和用户反馈，确保内容的质量和效果。
    - 在推荐书籍时，保持客观公正，不得夸大其词或误导消费者。
    - 尊重版权和知识产权，不发布未经授权的内容。
    ```

    这个优化后的系统提示详细描述了角色、技能点以及相关的限制条件，确保了在小红书中有效推广书籍的同时，也遵循了平台的规则和最佳实践。




.. GENERATED FROM PYTHON SOURCE LINES 100-103

.. note:: 1. 样例的 Embedding 将被缓存在 `~/.cache/agentscope/` 中，以避免重复计算。
 2. `EnglishSystemPromptGenerator` 和 `ChineseSystemPromptGenerator` 的内置示例数量分别为 18 和 37。请注意 Embedding API 服务的成本。



.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 50.528 seconds)


.. _sphx_glr_download_build_tutorial_prompt_optimization.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: prompt_optimization.ipynb <prompt_optimization.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: prompt_optimization.py <prompt_optimization.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: prompt_optimization.zip <prompt_optimization.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
