
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "build_tutorial/prompt_optimization.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_build_tutorial_prompt_optimization.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_build_tutorial_prompt_optimization.py:


.. _system-prompt-optimization:

系统提示优化
============================

AgentScope 实现了一个用于优化智能体系统提示的模块。

.. _system-prompt-generator:

系统提示生成器
^^^^^^^^^^^^^^^^^^^^^^^^

系统提示生成器使用元提示（Meta prompt）来指导模型根据用户的要求生成系统提示，并允许开发人员使用内置示例或提供自己的示例作为上下文学习（ICL）。

系统提示生成器包括一个 `EnglishSystemPromptGenerator` 和一个 `ChineseSystemPromptGenerator` 模块，它们只在使用的语言上有所不同。

我们以 `ChineseSystemPromptGenerator` 为例,说明如何使用系统提示生成器。

初始化
^^^^^^^^^^^^^^^^^^^^^^^^

要初始化生成器,你需要首先在 `agentscope.init` 函数中注册你的模型配置。

.. GENERATED FROM PYTHON SOURCE LINES 26-37

.. code-block:: Python


    from agentscope.prompt import ChineseSystemPromptGenerator
    import agentscope

    model_config = {
        "model_type": "dashscope_chat",
        "config_name": "qwen_config",
        "model_name": "qwen-max",
        # 通过环境变量导出你的 api 密钥
    }








.. GENERATED FROM PYTHON SOURCE LINES 38-40

生成器将使用内置的默认元提示来指导大语言模型生成系统提示。


.. GENERATED FROM PYTHON SOURCE LINES 40-50

.. code-block:: Python


    agentscope.init(
        model_configs=model_config,
    )

    prompt_generator = ChineseSystemPromptGenerator(
        model_config_name="qwen_config",
    )









.. GENERATED FROM PYTHON SOURCE LINES 51-59

我们欢迎用户自由尝试不同的优化方法。我们提供了相应的 `SystemPromptGeneratorBase` 模块，可以通过继承来实现自定义的系统提示生成器。

生成系统提示
^^^^^^^^^^^^^^^^^^^^^^^^^

调用生成器的 `generate` 函数来生成系统提示，如下所示。

可以输入一个需求，或者要优化的系统提示。

.. GENERATED FROM PYTHON SOURCE LINES 59-66

.. code-block:: Python


    generated_system_prompt = prompt_generator.generate(
        user_input="为一位小红书营销专家生成系统提示，他负责推广书籍。",
    )

    print(generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```markdown
    ## 系统提示

    ### 角色描述
    你是一位小红书营销专家，专注于书籍推广领域。你的任务是通过创意内容和策略吸引目标读者群体，提高书籍的知名度与销量。你熟悉小红书平台的各种功能及最佳实践，并且能够根据不同的书籍类型制定出有效的营销计划。

    ### 技能点
    - **内容创作**：能够撰写吸引人的标题、简介以及详细推荐理由，以激发潜在读者的兴趣。
    - **视觉设计**：了解如何使用图片、视频等多媒体元素增强帖子吸引力，使之更加符合小红书用户的审美偏好。
    - **数据分析**：掌握基本的数据分析技巧，能够根据帖子表现调整优化策略。
    - **社区互动**：擅长与粉丝互动交流，建立良好的社区氛围，促进用户参与度。
    - **趋势洞察**：对当前流行趋势保持敏感，能够及时捕捉并利用热点进行内容创作。
    - **SEO优化**：理解小红书内部搜索引擎的工作原理，懂得如何优化关键词来增加曝光率。

    ### 限制条件
    - 所有活动都必须遵守小红书平台规则及相关法律法规。
    - 在不损害品牌形象的前提下追求最大化营销效果。
    - 营销方案需考虑到成本效益比，确保投入产出合理。
    - 注意保护个人隐私信息，在任何情况下不得泄露或滥用。

    ### 可调用工具
    - **图像编辑软件**：用于制作高质量封面图和其他视觉素材。
    - **数据分析工具**：如第三方社交媒体分析平台，帮助跟踪帖子表现并提供改进建议。
    - **在线调研工具**：收集目标受众反馈，更好地了解市场需求。
    - **内容管理日历**：规划发布频率与时效性，保证内容持续更新。

    请基于以上指导原则开展工作，发挥你的专业优势，为每本书籍量身定制独一无二的小红书营销方案。
    ```

    这个优化后的系统提示不仅明确了作为小红书营销专家的角色定位，还详细列举了所需的关键技能点，并设定了合理的操作边界。同时，也指出了可能需要借助的一些外部工具，以便更高效地完成任务。




.. GENERATED FROM PYTHON SOURCE LINES 67-86

上下文学习（ICL）
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

AgentScope 在系统提示生成中支持上下文学习。

要使用示例，AgentScope 提供了以下参数:

- `example_num`: 附加到元提示的示例数量，默认为 0
- `example_selection_strategy`: 选择示例的策略，可选 "random" 和 "similarity"。
- `example_list`: 一个示例列表，其中每个示例必须是一个带有键 "user_prompt" 和 "opt_prompt" 的字典。如果未指定,将使用内置的示例列表。

注意，如果你选择 "similarity" 作为示例选择策略，你需要在 `embed_model_config_name` 或 `local_embedding_model` 参数中指定一个嵌入模型。

它们的区别如下:

- `embed_model_config_name`: 你必须先在 `agentscope.init` 中注册嵌入模型，并在此参数中指定模型配置名称。
- `local_embedding_model`: 或者，你可以使用 `sentence_transformers.SentenceTransformer` 库支持的本地小型嵌入模型。

如果你不指定上述参数，AgentScope 将使用默认的 "sentence-transformers/all-mpnet-base-v2" 模型，该模型可在 CPU 上运行。

.. GENERATED FROM PYTHON SOURCE LINES 86-99

.. code-block:: Python


    icl_generator = ChineseSystemPromptGenerator(
        model_config_name="qwen_config",
        example_num=3,
        example_selection_strategy="random",
    )

    icl_generated_system_prompt = icl_generator.generate(
        user_input="为一位小红书营销专家生成系统提示，他负责推广书籍。",
    )

    print(icl_generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```
    # 角色
    你是一位小红书营销专家，专注于通过创意内容和策略来推广书籍，以吸引目标读者群体并提高书籍销量。

    ## 技能
    ### 技能1：内容创作与编辑
    - **任务**：根据书籍的内容和目标受众，撰写吸引人的文案、制作高质量的图片或视频内容。
      - 创作引人入胜的故事性文案，能够激发读者兴趣。
      - 设计美观且符合品牌形象的图片或短视频，增强视觉吸引力。
      - 确保所有发布的内容都遵循小红书平台的最佳实践和社区准则。

    ### 技能2：市场分析与策略制定
    - **任务**：深入研究目标市场，了解读者需求及竞争对手情况，据此制定有效的营销策略。
      - 分析同类书籍在小红书上的表现，识别成功案例中的关键因素。
      - 定期监测竞品动态，及时调整自身策略以保持竞争优势。
      - 运用数据分析工具（如需调用外部工具）评估活动效果，不断优化内容方向。

    ### 技能3：互动管理
    - **任务**：积极与粉丝互动，建立良好的社区氛围，促进用户参与度。
      - 快速响应评论区留言，解答疑问，增加用户粘性。
      - 组织线上活动（如问答、抽奖等），鼓励用户分享自己的读书体验。
      - 适时邀请知名作者或意见领袖进行合作，扩大影响力。

    ## 限制：
    - 所有营销活动必须遵守相关法律法规及小红书平台规则。
    - 在设计任何促销计划时，要确保其真实性和透明度，避免误导消费者。
    - 尽量使用原创素材，若需引用他人作品，则须获得授权。
    - 注意保护个人隐私信息，在收集和处理用户数据时严格遵循GDPR等相关规定。
    ```




.. GENERATED FROM PYTHON SOURCE LINES 100-103

.. note:: 1. 样例的 Embedding 将被缓存在 `~/.cache/agentscope/` 中，以避免重复计算。
 2. `EnglishSystemPromptGenerator` 和 `ChineseSystemPromptGenerator` 的内置示例数量分别为 18 和 37。请注意 Embedding API 服务的成本。



.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 12.005 seconds)


.. _sphx_glr_download_build_tutorial_prompt_optimization.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: prompt_optimization.ipynb <prompt_optimization.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: prompt_optimization.py <prompt_optimization.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: prompt_optimization.zip <prompt_optimization.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
