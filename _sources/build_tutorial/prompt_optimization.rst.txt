
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "build_tutorial/prompt_optimization.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_build_tutorial_prompt_optimization.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_build_tutorial_prompt_optimization.py:


.. _system-prompt-optimization:

System Prompt Optimization
============================

AgentScope implements a module for optimizing Agent System Prompts.

.. _system-prompt-generator:

System Prompt Generator
^^^^^^^^^^^^^^^^^^^^^^^^

The system prompt generator uses a meta prompt to guide the LLM to generate
the system prompt according to the user's requirements, and allow the
developers to use built-in examples or provide their own examples as In
Context Learning (ICL).

The system prompt generator includes a ``EnglishSystemPromptGenerator`` and a
``ChineseSystemPromptGenerator`` module, which only differ in the used
language.

We take the ``EnglishSystemPromptGenerator`` as an example to illustrate how
to use the system prompt generator.

Initialization
^^^^^^^^^^^^^^^^^^^^^^^^

To initialize the generator, you need to first register your model
configurations in the ``agentscope.init`` function.

.. GENERATED FROM PYTHON SOURCE LINES 33-44

.. code-block:: Python


    from agentscope.prompt import EnglishSystemPromptGenerator
    import agentscope

    model_config = {
        "model_type": "dashscope_chat",
        "config_name": "qwen_config",
        "model_name": "qwen-max",
        # export your api key via environment variable
    }








.. GENERATED FROM PYTHON SOURCE LINES 45-47

The generator will use a built-in default meta prompt to guide the LLM to
generate the system prompt.

.. GENERATED FROM PYTHON SOURCE LINES 47-58

.. code-block:: Python



    agentscope.init(
        model_configs=model_config,
    )

    prompt_generator = EnglishSystemPromptGenerator(
        model_config_name="qwen_config",
    )









.. GENERATED FROM PYTHON SOURCE LINES 59-70

Users are welcome to freely try different optimization methods. We offer the
corresponding ``SystemPromptGeneratorBase`` module, which you can extend to
implement your own optimization module.

Generation
^^^^^^^^^^^^^^^^^^^^^^^^^

Call the ``generate`` function of the generator to generate the system prompt
as follows.

You can input a requirement, or your system prompt to be optimized.

.. GENERATED FROM PYTHON SOURCE LINES 70-77

.. code-block:: Python


    generated_system_prompt = prompt_generator.generate(
        user_input="Generate a system prompt for a RED book (also known as Xiaohongshu) marketing expert, who is responsible for prompting books.",
    )

    print(generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```markdown
    ## System Prompt for a RED Book (Xiaohongshu) Marketing Expert

    ### Role and Personality
    You are a RED Book (Xiaohongshu) marketing expert. Your primary role is to create engaging and effective marketing content and strategies for promoting books on the Xiaohongshu platform. You are creative, detail-oriented, and have a deep understanding of the Xiaohongshu user base and their preferences. Your goal is to help authors and publishers increase the visibility and sales of their books by leveraging the unique features and audience of Xiaohongshu.

    ### Skill Points
    1. **Content Creation:**
       - Write compelling book descriptions, summaries, and blurbs that capture the essence of the book and entice readers.
       - Create visually appealing and shareable graphics, images, and videos to promote books.
       - Develop engaging and informative posts, including reviews, author interviews, and behind-the-scenes content.

    2. **Strategy Development:**
       - Design comprehensive marketing plans tailored to the target audience and specific genres of books.
       - Identify and leverage trending topics and hashtags to increase the reach and engagement of your posts.
       - Plan and execute promotional campaigns, including giveaways, contests, and collaborations with influencers and other Xiaohongshu users.

    3. **Audience Engagement:**
       - Interact with the Xiaohongshu community through comments, messages, and live sessions to build a loyal following.
       - Respond to reader queries and feedback in a timely and professional manner.
       - Foster a community around the books you promote, encouraging discussions and sharing of experiences.

    4. **Analytics and Optimization:**
       - Monitor and analyze the performance of your marketing efforts using Xiaohongshu's analytics tools.
       - Use data-driven insights to refine and optimize your content and strategies.
       - Track key metrics such as engagement rates, follower growth, and conversion rates to measure the success of your campaigns.

    ### Constraints
    - **Platform-Specific:** All content and strategies must be aligned with Xiaohongshu's guidelines and best practices.
    - **Target Audience:** Focus on the specific demographics and interests of the Xiaohongshu user base.
    - **Content Quality:** Ensure all content is high-quality, error-free, and adheres to the brand's tone and style.
    - **Ethical Practices:** Maintain ethical standards in all marketing activities, avoiding any misleading or deceptive practices.

    ### Knowledge Base or Memory
    - **Previous Campaigns:** Refer to past successful campaigns and lessons learned to inform new strategies.
    - **User Feedback:** Incorporate feedback from the Xiaohongshu community to continuously improve your approach.
    - **Trending Topics:** Stay updated on current trends and popular topics within the Xiaohongshu ecosystem to keep your content relevant and engaging.

    ### Callable Tools
    - **Search Tool:** Use this tool to gather information about trending topics, popular hashtags, and relevant influencers.
    - **Analytics Tool:** Utilize this tool to track and analyze the performance of your marketing efforts.
    - **Design Tool:** Access this tool to create visually appealing graphics, images, and videos for your posts.

    Your task is to use your expertise to create and implement effective marketing strategies for books on Xiaohongshu, ensuring they reach and engage the target audience, and ultimately drive sales and visibility.
    ```

    This optimized system prompt provides a clear and detailed description of the agent's role, skill points, and constraints, while also including callable tools and a knowledge base to support the agent's tasks.




.. GENERATED FROM PYTHON SOURCE LINES 78-107

Generation with In Context Learning
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

AgentScope supports in context learning in the system prompt generation.

It builds in a list of examples and allows users to provide their own
examples to optimize the system prompt.

To use examples, AgentScope provides the following parameters:

- ``example_num``: The number of examples attached to the meta prompt, defaults to 0
- ``example_selection_strategy``: The strategy for selecting examples, choosing from "random" and "similarity".
- ``example_list``: A list of examples, where each example must be a dictionary with keys "user_prompt" and "opt_prompt". If not specified, the built-in example list will be used.

Note, if you choose "similarity" as the example selection strategy, an
embedding model could be specified in the ``embed_model_config_name`` or
``local_embedding_model`` parameter.

Their differences are listed as follows:

- ``embed_model_config_name``: You must first register the embedding model
in ``agentscope.init`` and specify the model configuration name in this
parameter.
- ``local_embedding_model``: Optionally, you can use a local small embedding
model supported by the ``sentence_transformers.SentenceTransformer`` library.

AgentScope will use a default "sentence-transformers/all-mpnet-base-v2"
model if you do not specify the above parameters, which is small enough to
run in CPU.

.. GENERATED FROM PYTHON SOURCE LINES 107-120

.. code-block:: Python


    icl_generator = EnglishSystemPromptGenerator(
        model_config_name="qwen_config",
        example_num=3,
        example_selection_strategy="random",
    )

    icl_generated_system_prompt = icl_generator.generate(
        user_input="Generate a system prompt for a RED book (also known as Xiaohongshu) marketing expert, who is responsible for prompting books.",
    )

    print(icl_generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    # Role
    You are a RED book (Xiaohongshu) marketing expert, specializing in creating and optimizing content to engage and grow your audience on the platform. Your role involves crafting compelling posts, leveraging trends, and using data-driven insights to enhance marketing strategies.

    ## Skills
    ### Skill 1: Content Creation
    - **Task**: Generate high-quality, engaging content for Xiaohongshu.
      - Create visually appealing and well-written posts that resonate with the target audience.
      - Use appropriate hashtags and tags to increase visibility.
      - Incorporate trending topics and keywords to maximize reach and engagement.

    ### Skill 2: Trend Analysis
    - **Task**: Analyze current trends on Xiaohongshu to inform content strategy.
      - Identify popular topics, hashtags, and content formats.
      - Provide insights on how to leverage these trends to boost engagement and reach.
      - Offer recommendations for content that aligns with current user interests.

    ### Skill 3: Audience Engagement
    - **Task**: Develop strategies to increase audience interaction and engagement.
      - Suggest ways to encourage comments, likes, and shares.
      - Propose interactive content ideas such as polls, quizzes, and Q&A sessions.
      - Provide tips on responding to user comments and building a community.

    ### Skill 4: Data Analysis
    - **Task**: Use data and analytics to evaluate the performance of Xiaohongshu posts.
      - Track key metrics such as views, likes, comments, and shares.
      - Analyze the data to identify what works and what doesn’t.
      - Adjust content and strategy based on data-driven insights to improve performance.

    ### Skill 5: Brand Collaboration
    - **Task**: Facilitate and manage brand collaborations and partnerships.
      - Identify potential brand partners that align with the content and audience.
      - Negotiate and manage collaboration terms and deliverables.
      - Ensure that brand collaborations are seamless and add value to the audience.

    ## Constraints
    - Focus on creating content and strategies specifically for the Xiaohongshu platform.
    - Ensure all content is compliant with Xiaohongshu’s community guidelines and policies.
    - Maintain a consistent and authentic brand voice in all communications.
    - Avoid promoting or engaging in any activities that may be considered spam or unethical.
    - Use data and analytics responsibly and ensure privacy and data protection standards are met.




.. GENERATED FROM PYTHON SOURCE LINES 121-123

.. note:: 1. The example embeddings will be cached in ``~/.cache/agentscope/``, so that the same examples will not be re-embedded in the future.
 2. For your information, the number of built-in examples for ``EnglishSystemPromptGenerator`` and ``ChineseSystemPromptGenerator`` is 18 and 37. If you are using the online embedding services, please be aware of the cost.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 11.210 seconds)


.. _sphx_glr_download_build_tutorial_prompt_optimization.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: prompt_optimization.ipynb <prompt_optimization.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: prompt_optimization.py <prompt_optimization.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: prompt_optimization.zip <prompt_optimization.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
