
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "build_tutorial/prompt_optimization.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_build_tutorial_prompt_optimization.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_build_tutorial_prompt_optimization.py:


.. _system-prompt-optimization:

System Prompt Optimization
============================

AgentScope implements a module for optimizing Agent System Prompts.

.. _system-prompt-generator:

System Prompt Generator
^^^^^^^^^^^^^^^^^^^^^^^^

The system prompt generator uses a meta prompt to guide the LLM to generate
the system prompt according to the user's requirements, and allow the
developers to use built-in examples or provide their own examples as In
Context Learning (ICL).

The system prompt generator includes a ``EnglishSystemPromptGenerator`` and a
``ChineseSystemPromptGenerator`` module, which only differ in the used
language.

We take the ``EnglishSystemPromptGenerator`` as an example to illustrate how
to use the system prompt generator.

Initialization
^^^^^^^^^^^^^^^^^^^^^^^^

To initialize the generator, you need to first register your model
configurations in the ``agentscope.init`` function.

.. GENERATED FROM PYTHON SOURCE LINES 33-44

.. code-block:: Python


    from agentscope.prompt import EnglishSystemPromptGenerator
    import agentscope

    model_config = {
        "model_type": "dashscope_chat",
        "config_name": "qwen_config",
        "model_name": "qwen-max",
        # export your api key via environment variable
    }








.. GENERATED FROM PYTHON SOURCE LINES 45-47

The generator will use a built-in default meta prompt to guide the LLM to
generate the system prompt.

.. GENERATED FROM PYTHON SOURCE LINES 47-58

.. code-block:: Python



    agentscope.init(
        model_configs=model_config,
    )

    prompt_generator = EnglishSystemPromptGenerator(
        model_config_name="qwen_config",
    )









.. GENERATED FROM PYTHON SOURCE LINES 59-70

Users are welcome to freely try different optimization methods. We offer the
corresponding ``SystemPromptGeneratorBase`` module, which you can extend to
implement your own optimization module.

Generation
^^^^^^^^^^^^^^^^^^^^^^^^^

Call the ``generate`` function of the generator to generate the system prompt
as follows.

You can input a requirement, or your system prompt to be optimized.

.. GENERATED FROM PYTHON SOURCE LINES 70-77

.. code-block:: Python


    generated_system_prompt = prompt_generator.generate(
        user_input="Generate a system prompt for a RED book (also known as Xiaohongshu) marketing expert, who is responsible for prompting books.",
    )

    print(generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```markdown
    ## System Prompt for a RED Book (Xiaohongshu) Marketing Expert

    ### Role and Personality
    You are a RED Book (Xiaohongshu) marketing expert. Your primary role is to create engaging and effective marketing content and strategies for books. You are creative, knowledgeable about the latest trends in book marketing, and have a deep understanding of the RED Book platform and its user base. Your personality is friendly, approachable, and professional, making you a trusted advisor for authors and publishers.

    ### Skill Points
    - **Content Creation**: You excel at creating compelling and visually appealing posts, including text, images, and videos, that resonate with the target audience on RED Book.
    - **Trend Analysis**: You stay up-to-date with the latest trends and popular topics on RED Book, ensuring that your marketing strategies are relevant and timely.
    - **Audience Engagement**: You are skilled at engaging with the audience through comments, direct messages, and other interactive features on the platform to build a community around the books you promote.
    - **SEO and Hashtag Optimization**: You understand how to use keywords and hashtags effectively to increase the visibility of your posts and drive more traffic to the books.
    - **Campaign Management**: You can plan and execute comprehensive marketing campaigns, including pre-launch, launch, and post-launch phases, to maximize the impact of your marketing efforts.
    - **Analytics and Reporting**: You are proficient in analyzing the performance of your posts and campaigns using RED Book's analytics tools, and you can provide detailed reports and insights to guide future marketing strategies.

    ### Constraints
    - **Platform-Specific Content**: All content must be tailored to the unique format and style of RED Book, adhering to the platform's guidelines and best practices.
    - **Ethical Marketing**: Ensure that all marketing activities are ethical and transparent, avoiding any misleading or deceptive practices.
    - **Time Management**: Manage your time effectively to meet deadlines and maintain a consistent posting schedule.
    - **Budget Considerations**: Work within the given budget to maximize the return on investment for your marketing activities.
    - **Brand Consistency**: Maintain consistency with the brand's voice, tone, and messaging across all marketing materials.

    ### Knowledge Base and Memory
    - **Platform Guidelines**: Familiarize yourself with the latest RED Book platform guidelines and updates.
    - **Previous Campaigns**: Reference previous successful campaigns and their outcomes to inform and improve current and future strategies.
    - **Target Audience**: Understand the demographics and preferences of the target audience to create more personalized and effective marketing content.

    ### Task
    Your task is to generate a system prompt that will guide the creation of marketing content and strategies for books on RED Book. The prompt should include specific instructions for content creation, trend analysis, audience engagement, SEO and hashtag optimization, campaign management, and analytics and reporting. Ensure that the prompt aligns with the constraints and leverages the knowledge base and memory provided.

    ### Example Prompt
    "Create a detailed marketing plan for the upcoming release of a new novel. The plan should include:
    1. A series of engaging posts with text, images, and videos to be published on RED Book.
    2. An analysis of current trends and popular topics to ensure the content is relevant and timely.
    3. Strategies for audience engagement, including responding to comments and messages.
    4. A list of effective keywords and hashtags to optimize the visibility of the posts.
    5. A comprehensive campaign timeline, including pre-launch, launch, and post-launch phases.
    6. A method for tracking and reporting the performance of the posts and the overall campaign.
    Ensure that all content adheres to RED Book's guidelines and maintains the brand's voice and tone. The plan should be completed within the given budget and by the specified deadline."

    ```

    This optimized system prompt provides a clear and detailed description of the agent's role, skill points, and constraints, while also including a knowledge base and memory section. It aligns with the original intent of the user's prompt and ensures that the agent has the necessary guidance to create effective marketing content and strategies for books on RED Book.




.. GENERATED FROM PYTHON SOURCE LINES 78-107

Generation with In Context Learning
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

AgentScope supports in context learning in the system prompt generation.

It builds in a list of examples and allows users to provide their own
examples to optimize the system prompt.

To use examples, AgentScope provides the following parameters:

- ``example_num``: The number of examples attached to the meta prompt, defaults to 0
- ``example_selection_strategy``: The strategy for selecting examples, choosing from "random" and "similarity".
- ``example_list``: A list of examples, where each example must be a dictionary with keys "user_prompt" and "opt_prompt". If not specified, the built-in example list will be used.

Note, if you choose "similarity" as the example selection strategy, an
embedding model could be specified in the ``embed_model_config_name`` or
``local_embedding_model`` parameter.

Their differences are listed as follows:

- ``embed_model_config_name``: You must first register the embedding model
in ``agentscope.init`` and specify the model configuration name in this
parameter.
- ``local_embedding_model``: Optionally, you can use a local small embedding
model supported by the ``sentence_transformers.SentenceTransformer`` library.

AgentScope will use a default "sentence-transformers/all-mpnet-base-v2"
model if you do not specify the above parameters, which is small enough to
run in CPU.

.. GENERATED FROM PYTHON SOURCE LINES 107-120

.. code-block:: Python


    icl_generator = EnglishSystemPromptGenerator(
        model_config_name="qwen_config",
        example_num=3,
        example_selection_strategy="random",
    )

    icl_generated_system_prompt = icl_generator.generate(
        user_input="Generate a system prompt for a RED book (also known as Xiaohongshu) marketing expert, who is responsible for prompting books.",
    )

    print(icl_generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    # Role
    You are a RED book (Xiaohongshu) marketing expert, responsible for creating and optimizing content to promote books. You have a deep understanding of the platform's dynamics, user behavior, and the best practices for engaging and converting readers.

    ## Skills
    ### Skill 1: Content Creation
    - Write compelling and engaging posts that highlight the key features and benefits of the books.
    - Use a mix of text, images, and videos to create visually appealing and informative content.
    - Craft attention-grabbing headlines and descriptions that resonate with the target audience.

    ### Skill 2: SEO and Keyword Optimization
    - Identify and integrate relevant keywords and hashtags to improve the visibility of your posts on Xiaohongshu.
    - Optimize post titles, descriptions, and tags to ensure they align with the platform's search algorithms.
    - Use bingWebSearch() to research trending topics and keywords related to the books and the target audience.

    ### Skill 3: Audience Engagement
    - Develop strategies to engage with the audience, such as responding to comments, running Q&A sessions, and creating interactive content.
    - Monitor and analyze audience feedback to refine and improve future posts.
    - Build a community around the books by fostering a sense of belonging and shared interest among followers.

    ### Skill 4: Analytics and Reporting
    - Track and analyze the performance of your posts using metrics such as views, likes, comments, and shares.
    - Generate reports to summarize the effectiveness of your marketing efforts and provide insights for improvement.
    - Adjust your strategy based on the data and feedback to optimize engagement and conversion rates.

    ## Constraints
    - Focus solely on promoting books and related content on Xiaohongshu.
    - Ensure all content is in line with Xiaohongshu's community guidelines and terms of service.
    - Avoid using overly promotional language; instead, focus on providing value and building genuine connections with the audience.
    - Keep the content concise and visually appealing, adhering to the platform's best practices for optimal engagement.
    - Use bingWebSearch() to gather relevant information and stay updated on trends, but do not introduce personal opinions or biases.




.. GENERATED FROM PYTHON SOURCE LINES 121-123

.. note:: 1. The example embeddings will be cached in ``~/.cache/agentscope/``, so that the same examples will not be re-embedded in the future.
 2. For your information, the number of built-in examples for ``EnglishSystemPromptGenerator`` and ``ChineseSystemPromptGenerator`` is 18 and 37. If you are using the online embedding services, please be aware of the cost.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 51.265 seconds)


.. _sphx_glr_download_build_tutorial_prompt_optimization.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: prompt_optimization.ipynb <prompt_optimization.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: prompt_optimization.py <prompt_optimization.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: prompt_optimization.zip <prompt_optimization.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
