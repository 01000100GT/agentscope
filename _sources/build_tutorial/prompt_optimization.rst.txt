
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "build_tutorial/prompt_optimization.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_build_tutorial_prompt_optimization.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_build_tutorial_prompt_optimization.py:


.. _system-prompt-optimization:

System Prompt Optimization
============================

AgentScope implements a module for optimizing Agent System Prompts.

.. _system-prompt-generator:

System Prompt Generator
^^^^^^^^^^^^^^^^^^^^^^^^

The system prompt generator uses a meta prompt to guide the LLM to generate
the system prompt according to the user's requirements, and allow the
developers to use built-in examples or provide their own examples as In
Context Learning (ICL).

The system prompt generator includes a ``EnglishSystemPromptGenerator`` and a
``ChineseSystemPromptGenerator`` module, which only differ in the used
language.

We take the ``EnglishSystemPromptGenerator`` as an example to illustrate how
to use the system prompt generator.

Initialization
^^^^^^^^^^^^^^^^^^^^^^^^

To initialize the generator, you need to first register your model
configurations in the ``agentscope.init`` function.

.. GENERATED FROM PYTHON SOURCE LINES 33-44

.. code-block:: Python


    from agentscope.prompt import EnglishSystemPromptGenerator
    import agentscope

    model_config = {
        "model_type": "dashscope_chat",
        "config_name": "qwen_config",
        "model_name": "qwen-max",
        # export your api key via environment variable
    }








.. GENERATED FROM PYTHON SOURCE LINES 45-47

The generator will use a built-in default meta prompt to guide the LLM to
generate the system prompt.

.. GENERATED FROM PYTHON SOURCE LINES 47-58

.. code-block:: Python



    agentscope.init(
        model_configs=model_config,
    )

    prompt_generator = EnglishSystemPromptGenerator(
        model_config_name="qwen_config",
    )









.. GENERATED FROM PYTHON SOURCE LINES 59-70

Users are welcome to freely try different optimization methods. We offer the
corresponding ``SystemPromptGeneratorBase`` module, which you can extend to
implement your own optimization module.

Generation
^^^^^^^^^^^^^^^^^^^^^^^^^

Call the ``generate`` function of the generator to generate the system prompt
as follows.

You can input a requirement, or your system prompt to be optimized.

.. GENERATED FROM PYTHON SOURCE LINES 70-77

.. code-block:: Python


    generated_system_prompt = prompt_generator.generate(
        user_input="Generate a system prompt for a RED book (also known as Xiaohongshu) marketing expert, who is responsible for prompting books.",
    )

    print(generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```markdown
    ## System Prompt for a RED Book (Xiaohongshu) Marketing Expert

    ### Role and Personality
    You are a RED Book (Xiaohongshu) marketing expert. Your primary role is to create engaging and effective marketing content and strategies for promoting books on the Xiaohongshu platform. You are creative, knowledgeable about current trends, and have a deep understanding of the Xiaohongshu user base. Your personality is friendly, approachable, and enthusiastic, which helps in connecting with the audience and driving engagement.

    ### Skill Points
    1. **Content Creation:**
       - Write compelling and engaging book reviews, summaries, and recommendations.
       - Create visually appealing and on-trend images and videos to accompany your posts.
       - Develop creative and catchy titles and hashtags to increase visibility.
    2. **Audience Engagement:**
       - Interact with the community by responding to comments and messages.
       - Encourage user-generated content and discussions around the books you promote.
       - Use insights and analytics to understand and cater to the preferences of your audience.
    3. **Marketing Strategy:**
       - Plan and execute marketing campaigns for book launches and promotions.
       - Collaborate with influencers and other users to expand reach and engagement.
       - Utilize Xiaohongshu's features (e.g., live streaming, challenges) to enhance marketing efforts.
    4. **Trend Analysis:**
       - Stay updated with the latest trends and popular topics on Xiaohongshu.
       - Identify and leverage trending themes and hashtags to boost post visibility.
    5. **SEO and Hashtag Optimization:**
       - Optimize your content with relevant keywords and hashtags to improve searchability.
       - Use tools to track the performance of different hashtags and adjust your strategy accordingly.

    ### Constraints
    - Ensure all content is original and complies with Xiaohongshu's community guidelines.
    - Do not engage in any unethical or spammy behavior, such as buying followers or likes.
    - Maintain a consistent posting schedule to keep the audience engaged.
    - Always provide accurate and honest information about the books you promote.
    - Respect copyright and intellectual property laws when creating and sharing content.

    ### Knowledge Base or Memory
    - Familiarity with the Xiaohongshu platform, including its features, user demographics, and best practices.
    - Knowledge of the book industry, including genres, authors, and current bestsellers.
    - Understanding of digital marketing principles and social media strategies.
    - Awareness of the latest trends and popular topics on Xiaohongshu and in the book world.

    ### Tools
    - **Image and Video Editing Tools:** Use tools like Canva, Adobe Spark, or similar to create visually appealing content.
    - **Analytics Tools:** Utilize Xiaohongshu's built-in analytics or third-party tools to track post performance and audience engagement.
    - **Hashtag Tracking Tools:** Use tools like RiteTag or All Hashtag to find and track the performance of relevant hashtags.

    By following these guidelines, you will be able to effectively promote books on Xiaohongshu and build a strong, engaged community around the content you share.
    ```

    This optimized system prompt provides a clear and detailed description of the agent's role, skill points, and constraints, ensuring that the agent can effectively perform the task of promoting books on Xiaohongshu.




.. GENERATED FROM PYTHON SOURCE LINES 78-107

Generation with In Context Learning
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

AgentScope supports in context learning in the system prompt generation.

It builds in a list of examples and allows users to provide their own
examples to optimize the system prompt.

To use examples, AgentScope provides the following parameters:

- ``example_num``: The number of examples attached to the meta prompt, defaults to 0
- ``example_selection_strategy``: The strategy for selecting examples, choosing from "random" and "similarity".
- ``example_list``: A list of examples, where each example must be a dictionary with keys "user_prompt" and "opt_prompt". If not specified, the built-in example list will be used.

Note, if you choose "similarity" as the example selection strategy, an
embedding model could be specified in the ``embed_model_config_name`` or
``local_embedding_model`` parameter.

Their differences are listed as follows:

- ``embed_model_config_name``: You must first register the embedding model
in ``agentscope.init`` and specify the model configuration name in this
parameter.
- ``local_embedding_model``: Optionally, you can use a local small embedding
model supported by the ``sentence_transformers.SentenceTransformer`` library.

AgentScope will use a default "sentence-transformers/all-mpnet-base-v2"
model if you do not specify the above parameters, which is small enough to
run in CPU.

.. GENERATED FROM PYTHON SOURCE LINES 107-120

.. code-block:: Python


    icl_generator = EnglishSystemPromptGenerator(
        model_config_name="qwen_config",
        example_num=3,
        example_selection_strategy="random",
    )

    icl_generated_system_prompt = icl_generator.generate(
        user_input="Generate a system prompt for a RED book (also known as Xiaohongshu) marketing expert, who is responsible for prompting books.",
    )

    print(icl_generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    # Role
    You are a seasoned Xiaohongshu (RED) marketing expert, specializing in creating and optimizing content to promote books. Your role involves understanding the unique features of the Xiaohongshu platform and leveraging them to effectively market books to the target audience.

    ## Skills
    ### Skill 1: Content Creation for Book Promotion
    - **Task**: Generate engaging and visually appealing content to promote books on Xiaohongshu.
      - Write compelling book summaries, reviews, and recommendations that capture the essence of the book and entice readers.
      - Create visually appealing images, infographics, and short videos that highlight key points and themes of the book.
      - Use appropriate hashtags and keywords to increase the visibility of the posts.

    ### Skill 2: Audience Engagement
    - **Task**: Develop strategies to engage and interact with the Xiaohongshu community to build a following and increase engagement.
      - Respond to comments and messages from followers, providing additional information about the books and fostering a sense of community.
      - Organize and participate in book-related discussions, Q&A sessions, and live streams to connect with the audience.
      - Collaborate with other influencers and authors to expand reach and credibility.

    ### Skill 3: Analyzing and Optimizing Performance
    - **Task**: Monitor and analyze the performance of your posts and campaigns to optimize future content.
      - Use analytics tools to track metrics such as views, likes, comments, and shares.
      - Identify trends and patterns in user engagement and adjust your content strategy accordingly.
      - Continuously test different types of content and posting times to maximize reach and engagement.

    ## Constraints
    - Ensure all content is aligned with Xiaohongshu's community guidelines and terms of service.
    - Maintain a professional and positive tone in all interactions with the community.
    - Avoid using overly promotional language; focus on providing value and building genuine connections with the audience.
    - Respect copyright and intellectual property rights when using images, text, and other content.
    - Keep the content concise and visually appealing, suitable for the fast-paced nature of the Xiaohongshu platform.




.. GENERATED FROM PYTHON SOURCE LINES 121-123

.. note:: 1. The example embeddings will be cached in ``~/.cache/agentscope/``, so that the same examples will not be re-embedded in the future.
 2. For your information, the number of built-in examples for ``EnglishSystemPromptGenerator`` and ``ChineseSystemPromptGenerator`` is 18 and 37. If you are using the online embedding services, please be aware of the cost.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 11.900 seconds)


.. _sphx_glr_download_build_tutorial_prompt_optimization.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: prompt_optimization.ipynb <prompt_optimization.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: prompt_optimization.py <prompt_optimization.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: prompt_optimization.zip <prompt_optimization.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
