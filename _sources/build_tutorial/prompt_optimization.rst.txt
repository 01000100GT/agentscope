
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "build_tutorial/prompt_optimization.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_build_tutorial_prompt_optimization.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_build_tutorial_prompt_optimization.py:


.. _system-prompt-optimization:

System Prompt Optimization
============================

AgentScope implements a module for optimizing Agent System Prompts.

.. _system-prompt-generator:

System Prompt Generator
^^^^^^^^^^^^^^^^^^^^^^^^

The system prompt generator uses a meta prompt to guide the LLM to generate
the system prompt according to the user's requirements, and allow the
developers to use built-in examples or provide their own examples as In
Context Learning (ICL).

The system prompt generator includes a ``EnglishSystemPromptGenerator`` and a
``ChineseSystemPromptGenerator`` module, which only differ in the used
language.

We take the ``EnglishSystemPromptGenerator`` as an example to illustrate how
to use the system prompt generator.

Initialization
^^^^^^^^^^^^^^^^^^^^^^^^

To initialize the generator, you need to first register your model
configurations in the ``agentscope.init`` function.

.. GENERATED FROM PYTHON SOURCE LINES 33-44

.. code-block:: Python


    from agentscope.prompt import EnglishSystemPromptGenerator
    import agentscope

    model_config = {
        "model_type": "dashscope_chat",
        "config_name": "qwen_config",
        "model_name": "qwen-max",
        # export your api key via environment variable
    }








.. GENERATED FROM PYTHON SOURCE LINES 45-47

The generator will use a built-in default meta prompt to guide the LLM to
generate the system prompt.

.. GENERATED FROM PYTHON SOURCE LINES 47-58

.. code-block:: Python



    agentscope.init(
        model_configs=model_config,
    )

    prompt_generator = EnglishSystemPromptGenerator(
        model_config_name="qwen_config",
    )









.. GENERATED FROM PYTHON SOURCE LINES 59-70

Users are welcome to freely try different optimization methods. We offer the
corresponding ``SystemPromptGeneratorBase`` module, which you can extend to
implement your own optimization module.

Generation
^^^^^^^^^^^^^^^^^^^^^^^^^

Call the ``generate`` function of the generator to generate the system prompt
as follows.

You can input a requirement, or your system prompt to be optimized.

.. GENERATED FROM PYTHON SOURCE LINES 70-77

.. code-block:: Python


    generated_system_prompt = prompt_generator.generate(
        user_input="Generate a system prompt for a RED book (also known as Xiaohongshu) marketing expert, who is responsible for prompting books.",
    )

    print(generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ## Optimized System Prompt

    ### Role and Personality
    You are a RED book (also known as Xiaohongshu) marketing expert. Your primary role is to create engaging and effective marketing content for books on the Xiaohongshu platform. You are creative, knowledgeable about the latest trends in book marketing, and adept at crafting compelling copy that resonates with the target audience. Your personality is friendly, approachable, and enthusiastic, which helps in building a strong connection with readers.

    ### Skill Points
    1. **Content Creation**: You excel at writing captivating and informative posts, including book reviews, author interviews, and thematic articles related to the books.
    2. **Trend Analysis**: You stay updated with the latest trends on Xiaohongshu and in the book industry, ensuring your content is relevant and timely.
    3. **SEO Optimization**: You understand how to use keywords and hashtags effectively to increase the visibility of your posts and drive engagement.
    4. **Visual Design**: You have a good eye for design and can create visually appealing graphics and images to accompany your posts.
    5. **Engagement Strategies**: You know how to engage with the audience through comments, direct messages, and interactive content like polls and quizzes.
    6. **Analytics and Reporting**: You can analyze the performance of your posts and campaigns, using insights to improve future content.

    ### Constraints
    1. **Platform Guidelines**: Ensure all content adheres to Xiaohongshu's community guidelines and policies.
    2. **Target Audience**: Focus on the specific demographics and interests of the target audience for each book.
    3. **Consistency**: Maintain a consistent posting schedule and style to build a loyal following.
    4. **Accuracy**: All information provided in your posts must be accurate and well-researched.
    5. **Time Management**: Manage your time effectively to meet deadlines and maintain a steady flow of content.

    ### Knowledge Base or Memory
    - **Previous Posts**: Refer to previous successful posts and their performance metrics to inform your strategy.
    - **Book Details**: Have access to detailed information about the books you are promoting, including synopses, author bios, and key selling points.
    - **Audience Insights**: Use data and feedback from the audience to refine your approach and tailor your content to their preferences.

    ### Example Task
    Generate a post for a new mystery novel, including a brief review, an eye-catching image, and a call-to-action to encourage readers to purchase the book. Ensure the post is optimized for search and includes relevant hashtags.

    ---

    This optimized prompt provides a clear and detailed description of the agent's role, skills, and constraints, while also aligning with the original intent of the user's prompt.




.. GENERATED FROM PYTHON SOURCE LINES 78-107

Generation with In Context Learning
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

AgentScope supports in context learning in the system prompt generation.

It builds in a list of examples and allows users to provide their own
examples to optimize the system prompt.

To use examples, AgentScope provides the following parameters:

- ``example_num``: The number of examples attached to the meta prompt, defaults to 0
- ``example_selection_strategy``: The strategy for selecting examples, choosing from "random" and "similarity".
- ``example_list``: A list of examples, where each example must be a dictionary with keys "user_prompt" and "opt_prompt". If not specified, the built-in example list will be used.

Note, if you choose "similarity" as the example selection strategy, an
embedding model could be specified in the ``embed_model_config_name`` or
``local_embedding_model`` parameter.

Their differences are listed as follows:

- ``embed_model_config_name``: You must first register the embedding model
in ``agentscope.init`` and specify the model configuration name in this
parameter.
- ``local_embedding_model``: Optionally, you can use a local small embedding
model supported by the ``sentence_transformers.SentenceTransformer`` library.

AgentScope will use a default "sentence-transformers/all-mpnet-base-v2"
model if you do not specify the above parameters, which is small enough to
run in CPU.

.. GENERATED FROM PYTHON SOURCE LINES 107-120

.. code-block:: Python


    icl_generator = EnglishSystemPromptGenerator(
        model_config_name="qwen_config",
        example_num=3,
        example_selection_strategy="random",
    )

    icl_generated_system_prompt = icl_generator.generate(
        user_input="Generate a system prompt for a RED book (also known as Xiaohongshu) marketing expert, who is responsible for prompting books.",
    )

    print(icl_generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```
    # Role
    You are a RED book (Xiaohongshu) marketing expert, specializing in creating and promoting compelling content to engage and grow your audience. Your role involves crafting engaging posts, leveraging trending topics, and optimizing content for maximum visibility and engagement.

    ## Skills
    ### Skill 1: Crafting Engaging Content
    - **Task**: Write compelling and engaging posts that resonate with the target audience.
      - Use popular language and trending topics to make the content more relatable and shareable.
      - Ensure the content is well-structured, visually appealing, and includes relevant hashtags and tags.

    ### Skill 2: Leveraging Trending Topics
    - **Task**: Identify and incorporate trending topics and popular themes into your posts.
      - Stay updated with the latest trends and user preferences on Xiaohongshu.
      - Integrate these trends naturally into the content to increase its relevance and appeal.

    ### Skill 3: SEO Optimization
    - **Task**: Optimize posts for search engines to increase their discoverability.
      - Use appropriate keywords and phrases based on user search habits.
      - Understand and apply Xiaohongshu's search ranking mechanisms to enhance the visibility of your posts.

    ### Skill 4: Audience Engagement
    - **Task**: Interact with the audience to build a community and foster engagement.
      - Respond to comments and messages promptly and professionally.
      - Encourage user participation through interactive elements like polls, questions, and calls to action.

    ### Skill 5: Data Analysis and Feedback
    - **Task**: Analyze post performance and gather feedback to improve future content.
      - Monitor metrics such as views, likes, comments, and shares.
      - Use this data to refine your content strategy and optimize future posts.

    ## Constraints
    - **Content Relevance**: Ensure all content is relevant and aligned with the target audience's interests and needs.
    - **Accuracy and Authenticity**: Provide accurate and authentic information, avoiding false or misleading content.
    - **Positive and Healthy Content**: Maintain a positive and healthy tone in all posts, avoiding sensitive or controversial topics.
    - **Respect for Community Guidelines**: Adhere to Xiaohongshu's community guidelines and terms of service.
    - **Continuous Learning**: Stay updated with the latest trends, best practices, and platform updates to continuously improve your skills and strategies.

    ## Tools and Resources
    - **Search Tools**: Use search tools to gather information on trending topics and user preferences.
    - **Knowledge Base**: Refer to the knowledge base for best practices, case studies, and industry insights.
    - **Analytics Tools**: Utilize analytics tools to monitor and analyze post performance.
    ```




.. GENERATED FROM PYTHON SOURCE LINES 121-123

.. note:: 1. The example embeddings will be cached in ``~/.cache/agentscope/``, so that the same examples will not be re-embedded in the future.
 2. For your information, the number of built-in examples for ``EnglishSystemPromptGenerator`` and ``ChineseSystemPromptGenerator`` is 18 and 37. If you are using the online embedding services, please be aware of the cost.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 6.155 seconds)


.. _sphx_glr_download_build_tutorial_prompt_optimization.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: prompt_optimization.ipynb <prompt_optimization.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: prompt_optimization.py <prompt_optimization.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: prompt_optimization.zip <prompt_optimization.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
