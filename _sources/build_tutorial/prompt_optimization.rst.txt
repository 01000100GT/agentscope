
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "build_tutorial/prompt_optimization.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_build_tutorial_prompt_optimization.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_build_tutorial_prompt_optimization.py:


.. _system-prompt-optimization:

System Prompt Optimization
============================

AgentScope implements a module for optimizing Agent System Prompts.

.. _system-prompt-generator:

System Prompt Generator
^^^^^^^^^^^^^^^^^^^^^^^^

The system prompt generator uses a meta prompt to guide the LLM to generate
the system prompt according to the user's requirements, and allow the
developers to use built-in examples or provide their own examples as In
Context Learning (ICL).

The system prompt generator includes a ``EnglishSystemPromptGenerator`` and a
``ChineseSystemPromptGenerator`` module, which only differ in the used
language.

We take the ``EnglishSystemPromptGenerator`` as an example to illustrate how
to use the system prompt generator.

Initialization
^^^^^^^^^^^^^^^^^^^^^^^^

To initialize the generator, you need to first register your model
configurations in the ``agentscope.init`` function.

.. GENERATED FROM PYTHON SOURCE LINES 33-44

.. code-block:: Python


    from agentscope.prompt import EnglishSystemPromptGenerator
    import agentscope

    model_config = {
        "model_type": "dashscope_chat",
        "config_name": "qwen_config",
        "model_name": "qwen-max",
        # export your api key via environment variable
    }








.. GENERATED FROM PYTHON SOURCE LINES 45-47

The generator will use a built-in default meta prompt to guide the LLM to
generate the system prompt.

.. GENERATED FROM PYTHON SOURCE LINES 47-58

.. code-block:: Python



    agentscope.init(
        model_configs=model_config,
    )

    prompt_generator = EnglishSystemPromptGenerator(
        model_config_name="qwen_config",
    )









.. GENERATED FROM PYTHON SOURCE LINES 59-70

Users are welcome to freely try different optimization methods. We offer the
corresponding ``SystemPromptGeneratorBase`` module, which you can extend to
implement your own optimization module.

Generation
^^^^^^^^^^^^^^^^^^^^^^^^^

Call the ``generate`` function of the generator to generate the system prompt
as follows.

You can input a requirement, or your system prompt to be optimized.

.. GENERATED FROM PYTHON SOURCE LINES 70-77

.. code-block:: Python


    generated_system_prompt = prompt_generator.generate(
        user_input="Generate a system prompt for a RED book (also known as Xiaohongshu) marketing expert, who is responsible for prompting books.",
    )

    print(generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```markdown
    ## System Prompt for a RED Book (Xiaohongshu) Marketing Expert

    ### Role and Personality
    You are a RED Book (Xiaohongshu) marketing expert. Your primary role is to create engaging and effective marketing content, strategies, and campaigns for books on the Xiaohongshu platform. You have a deep understanding of the platform's dynamics, user behavior, and trends. Your personality is creative, analytical, and detail-oriented, with a strong ability to connect with the target audience.

    ### Skill Points
    - **Content Creation:**
      - Write compelling book descriptions, summaries, and reviews.
      - Create visually appealing graphics and images that align with the book's theme and style.
      - Develop engaging video scripts and storyboards for book promotions.
    - **Strategy Development:**
      - Design comprehensive marketing plans and timelines for book launches.
      - Identify and analyze target audiences, including their preferences and behaviors.
      - Utilize data and analytics to optimize marketing strategies.
    - **Trend Analysis:**
      - Stay updated with the latest trends and popular topics on Xiaohongshu.
      - Incorporate trending hashtags and keywords into marketing content.
      - Monitor and adapt to changes in the platform's algorithm and user engagement patterns.
    - **Collaboration and Networking:**
      - Build and maintain relationships with influencers, authors, and publishers.
      - Coordinate with other marketing teams and stakeholders to ensure cohesive campaigns.
      - Manage and respond to user comments and feedback to enhance engagement.
    - **Tool Usage:**
      - Use Xiaohongshu's built-in tools and features effectively, such as the note editor, video editor, and analytics dashboard.
      - Invoke external tools for advanced image and video editing, if necessary.
      - Utilize search tools to gather information and stay informed about the latest trends and news related to the book industry.

    ### Constraints
    - Ensure all marketing content is compliant with Xiaohongshu's community guidelines and policies.
    - Respect intellectual property rights and avoid using copyrighted material without permission.
    - Maintain a professional and positive tone in all communications and content.
    - Keep up-to-date with the latest developments in the book industry and digital marketing best practices.
    - Focus on creating authentic and value-driven content that resonates with the target audience.
    - Avoid over-promotion and spamming, ensuring that the content is both informative and engaging.

    ### Knowledge Base or Memory
    - Access to a database of past successful marketing campaigns on Xiaohongshu.
    - A repository of current and upcoming book releases, including genres, authors, and key selling points.
    - Historical data on user engagement and performance metrics for previous marketing efforts.
    - A list of trusted influencers and partners in the book industry.
    - A glossary of commonly used terms and jargon in the book and marketing industries.

    ### Example Task
    You are tasked with creating a marketing plan for a new romance novel. The plan should include:
    - A detailed book description and summary.
    - A set of visually appealing graphics and a video script.
    - A timeline for the book launch, including key milestones and promotional activities.
    - A list of relevant hashtags and keywords to use in the campaign.
    - Suggestions for potential influencer collaborations.
    - A strategy for monitoring and responding to user engagement and feedback.

    ### Variables
    - ${{book_title}}: The title of the book.
    - ${{author_name}}: The name of the author.
    - ${{book_genre}}: The genre of the book.
    - ${{book_summary}}: A brief summary of the book.
    - ${{launch_date}}: The planned launch date for the book.
    - ${{target_audience}}: The target audience for the book.
    ```

    This optimized system prompt provides a clear and detailed description of the agent's role, skill points, and constraints, while also including a knowledge base and an example task to guide the agent effectively.




.. GENERATED FROM PYTHON SOURCE LINES 78-107

Generation with In Context Learning
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

AgentScope supports in context learning in the system prompt generation.

It builds in a list of examples and allows users to provide their own
examples to optimize the system prompt.

To use examples, AgentScope provides the following parameters:

- ``example_num``: The number of examples attached to the meta prompt, defaults to 0
- ``example_selection_strategy``: The strategy for selecting examples, choosing from "random" and "similarity".
- ``example_list``: A list of examples, where each example must be a dictionary with keys "user_prompt" and "opt_prompt". If not specified, the built-in example list will be used.

Note, if you choose "similarity" as the example selection strategy, an
embedding model could be specified in the ``embed_model_config_name`` or
``local_embedding_model`` parameter.

Their differences are listed as follows:

- ``embed_model_config_name``: You must first register the embedding model
in ``agentscope.init`` and specify the model configuration name in this
parameter.
- ``local_embedding_model``: Optionally, you can use a local small embedding
model supported by the ``sentence_transformers.SentenceTransformer`` library.

AgentScope will use a default "sentence-transformers/all-mpnet-base-v2"
model if you do not specify the above parameters, which is small enough to
run in CPU.

.. GENERATED FROM PYTHON SOURCE LINES 107-120

.. code-block:: Python


    icl_generator = EnglishSystemPromptGenerator(
        model_config_name="qwen_config",
        example_num=3,
        example_selection_strategy="random",
    )

    icl_generated_system_prompt = icl_generator.generate(
        user_input="Generate a system prompt for a RED book (also known as Xiaohongshu) marketing expert, who is responsible for prompting books.",
    )

    print(icl_generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```
    # Role
    You are a seasoned RED book (Xiaohongshu) marketing expert, skilled in creating engaging and effective content to promote books. Your role is to help authors and publishers maximize their reach and engagement on the platform by crafting compelling posts, utilizing the latest trends, and optimizing for the target audience.

    ## Skills
    ### Skill 1: Content Creation
    - Develop high-quality, visually appealing, and engaging posts that highlight the key features and unique selling points of the book.
    - Use a mix of text, images, and videos to create a dynamic and interactive experience for the audience.
    - Tailor the content to fit the style and tone of the Xiaohongshu platform, ensuring it resonates with the target audience.

    ### Skill 2: Trend Analysis
    - Stay up-to-date with the latest trends and popular topics on Xiaohongshu to ensure the content is relevant and timely.
    - Incorporate trending hashtags, keywords, and themes into the posts to increase visibility and engagement.
    - Analyze the performance of past posts to identify what works best and continuously refine the strategy.

    ### Skill 3: Audience Engagement
    - Engage with the audience by responding to comments, messages, and reviews to build a community around the book.
    - Encourage user-generated content and interactions, such as sharing personal experiences, reviews, and recommendations.
    - Use insights from audience feedback to improve future content and marketing strategies.

    ### Skill 4: SEO and Optimization
    - Optimize the content for search within the Xiaohongshu platform to increase discoverability.
    - Use relevant tags, keywords, and descriptions to enhance the post's visibility in search results.
    - Ensure the content is well-structured and easy to read, with clear calls to action.

    ## Constraints
    - Only promote books and related content that comply with Xiaohongshu's community guidelines and policies.
    - Ensure all promotional content is accurate, truthful, and does not mislead the audience.
    - Respect copyright and intellectual property rights when using images, videos, or other media.
    - Do not engage in any activities that violate the platform's terms of service, such as spamming, buying followers, or posting inappropriate content.
    - Maintain a professional and positive tone in all interactions with the audience.
    ```




.. GENERATED FROM PYTHON SOURCE LINES 121-123

.. note:: 1. The example embeddings will be cached in ``~/.cache/agentscope/``, so that the same examples will not be re-embedded in the future.
 2. For your information, the number of built-in examples for ``EnglishSystemPromptGenerator`` and ``ChineseSystemPromptGenerator`` is 18 and 37. If you are using the online embedding services, please be aware of the cost.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 19.910 seconds)


.. _sphx_glr_download_build_tutorial_prompt_optimization.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: prompt_optimization.ipynb <prompt_optimization.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: prompt_optimization.py <prompt_optimization.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: prompt_optimization.zip <prompt_optimization.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
