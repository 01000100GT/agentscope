
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "build_tutorial/prompt_optimization.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_build_tutorial_prompt_optimization.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_build_tutorial_prompt_optimization.py:


.. _system-prompt-optimization:

系统提示优化
============================

AgentScope 实现了一个用于优化智能体系统提示的模块。

.. _system-prompt-generator:

系统提示生成器
^^^^^^^^^^^^^^^^^^^^^^^^

系统提示生成器使用元提示（Meta prompt）来指导模型根据用户的要求生成系统提示，并允许开发人员使用内置示例或提供自己的示例作为上下文学习（ICL）。

系统提示生成器包括一个 `EnglishSystemPromptGenerator` 和一个 `ChineseSystemPromptGenerator` 模块，它们只在使用的语言上有所不同。

我们以 `ChineseSystemPromptGenerator` 为例,说明如何使用系统提示生成器。

初始化
^^^^^^^^^^^^^^^^^^^^^^^^

要初始化生成器,你需要首先在 `agentscope.init` 函数中注册你的模型配置。

.. GENERATED FROM PYTHON SOURCE LINES 26-37

.. code-block:: Python


    from agentscope.prompt import ChineseSystemPromptGenerator
    import agentscope

    model_config = {
        "model_type": "dashscope_chat",
        "config_name": "qwen_config",
        "model_name": "qwen-max",
        # 通过环境变量导出你的 api 密钥
    }








.. GENERATED FROM PYTHON SOURCE LINES 38-40

生成器将使用内置的默认元提示来指导大语言模型生成系统提示。


.. GENERATED FROM PYTHON SOURCE LINES 40-50

.. code-block:: Python


    agentscope.init(
        model_configs=model_config,
    )

    prompt_generator = ChineseSystemPromptGenerator(
        model_config_name="qwen_config",
    )









.. GENERATED FROM PYTHON SOURCE LINES 51-59

我们欢迎用户自由尝试不同的优化方法。我们提供了相应的 `SystemPromptGeneratorBase` 模块，可以通过继承来实现自定义的系统提示生成器。

生成系统提示
^^^^^^^^^^^^^^^^^^^^^^^^^

调用生成器的 `generate` 函数来生成系统提示，如下所示。

可以输入一个需求，或者要优化的系统提示。

.. GENERATED FROM PYTHON SOURCE LINES 59-66

.. code-block:: Python


    generated_system_prompt = prompt_generator.generate(
        user_input="为一位小红书营销专家生成系统提示，他负责推广书籍。",
    )

    print(generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```markdown
    ## 系统提示

    ### 角色描述
    你是一位小红书营销专家，专注于通过创意内容和策略来推广各类书籍。你的工作不仅仅是销售产品，更重要的是激发读者的兴趣，建立品牌与消费者之间的情感联系。你需要具备敏锐的市场洞察力、优秀的文案撰写能力以及良好的审美感，能够准确把握目标受众的心理需求。

    ### 技能点
    - **市场分析**：能够对当前图书市场的趋势进行深入研究，并根据分析结果制定有效的营销策略。
    - **内容创作**：擅长根据不同类型的书籍（如小说、非虚构作品等）创作吸引人的标题、简介及正文片段，以激发潜在读者的好奇心。
    - **视觉设计建议**：虽然主要职责不是直接参与图像或视频制作，但可以提供关于如何利用视觉元素增强帖子吸引力的专业意见。
    - **互动管理**：懂得如何有效地与粉丝互动，包括回复评论、举办线上活动等方式增加用户粘性。
    - **数据分析**：能够使用基本的数据分析工具来评估营销活动的效果，并据此调整未来的计划。

    ### 限制条件
    - 所有发布的图文内容必须遵守小红书平台的相关规定。
    - 在推荐书籍时应保持客观公正的态度，避免过度夸大其词。
    - 尽量采用正面积极的语言风格，营造健康向上的社区氛围。
    - 遵循版权法，在引用他人作品时需注明出处。
    - 如果需要获取最新的行业资讯或数据支持决策，则需调用外部搜索引擎工具完成。
  
    ### 特别说明
    如果任务中涉及到特定书籍的具体信息（如书名、作者等），请确保这些信息已被正确提供；否则，可能需要进一步询问客户或者借助网络资源来补充完整。
    ```

    这个优化后的system prompt不仅明确了角色定位为一位小红书上的书籍营销专家，还详细列举了所需的关键技能点，并设定了合理的操作边界，同时保留了对于超出大模型自身能力范围的任务（例如获取最新行业资讯）需要调用外部工具的要求。




.. GENERATED FROM PYTHON SOURCE LINES 67-86

上下文学习（ICL）
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

AgentScope 在系统提示生成中支持上下文学习。

要使用示例，AgentScope 提供了以下参数:

- `example_num`: 附加到元提示的示例数量，默认为 0
- `example_selection_strategy`: 选择示例的策略，可选 "random" 和 "similarity"。
- `example_list`: 一个示例列表，其中每个示例必须是一个带有键 "user_prompt" 和 "opt_prompt" 的字典。如果未指定,将使用内置的示例列表。

注意，如果你选择 "similarity" 作为示例选择策略，你需要在 `embed_model_config_name` 或 `local_embedding_model` 参数中指定一个嵌入模型。

它们的区别如下:

- `embed_model_config_name`: 你必须先在 `agentscope.init` 中注册嵌入模型，并在此参数中指定模型配置名称。
- `local_embedding_model`: 或者，你可以使用 `sentence_transformers.SentenceTransformer` 库支持的本地小型嵌入模型。

如果你不指定上述参数，AgentScope 将使用默认的 "sentence-transformers/all-mpnet-base-v2" 模型，该模型可在 CPU 上运行。

.. GENERATED FROM PYTHON SOURCE LINES 86-99

.. code-block:: Python


    icl_generator = ChineseSystemPromptGenerator(
        model_config_name="qwen_config",
        example_num=3,
        example_selection_strategy="random",
    )

    icl_generated_system_prompt = icl_generator.generate(
        user_input="为一位小红书营销专家生成系统提示，他负责推广书籍。",
    )

    print(icl_generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```markdown
    # 角色
    你是一位小红书营销专家，专注于书籍的推广工作。你的主要任务是通过创造吸引人的内容来提高书籍的知名度和销量。

    ## 技能
    ### 技能 1: 内容创作
    - 根据书籍的内容特点，撰写吸引人的标题、简介及推荐语。
    - 创造与书籍主题相关的高质量图文或视频内容。
    - 使用流行的话题标签（如#好书推荐 #读书笔记）来增加曝光度。

    ### 抄袭检测与原创性保证
    - 确保所有发布的内容都是原创的，避免抄袭行为。
    - 使用工具检查文本的原创性，确保符合平台规则。

    ### 数据分析与优化
    - 分析帖子的表现数据（点赞数、评论数等），以评估推广效果。
    - 根据数据分析结果调整策略，比如更改发布时间或者尝试不同的内容形式。

    ### 互动与社区建设
    - 积极回应读者评论，建立良好的粉丝关系。
    - 组织线上活动（例如问答、赠书活动）来增强用户参与感。

    ## 限制
    - 所有内容必须遵守小红书社区指南，包括但不限于禁止发布违法不良信息。
    - 推广时应保持真实性和客观性，不得夸大其词或误导消费者。
    - 在没有得到明确授权的情况下，不使用任何版权受保护的材料。
    - 保持正面积极的态度，避免涉及争议性话题。
    ```

    这个优化后的system prompt为一个专门负责在小红书上推广书籍的营销专家设定了角色，并详细描述了该角色所需具备的关键技能点以及一些基本的操作限制，同时保持了与用户原始意图的一致性。




.. GENERATED FROM PYTHON SOURCE LINES 100-103

.. note:: 1. 样例的 Embedding 将被缓存在 `~/.cache/agentscope/` 中，以避免重复计算。
 2. `EnglishSystemPromptGenerator` 和 `ChineseSystemPromptGenerator` 的内置示例数量分别为 18 和 37。请注意 Embedding API 服务的成本。



.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 52.834 seconds)


.. _sphx_glr_download_build_tutorial_prompt_optimization.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: prompt_optimization.ipynb <prompt_optimization.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: prompt_optimization.py <prompt_optimization.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: prompt_optimization.zip <prompt_optimization.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
