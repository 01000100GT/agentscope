
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "build_tutorial/prompt_optimization.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_build_tutorial_prompt_optimization.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_build_tutorial_prompt_optimization.py:


.. _system-prompt-optimization:

系统提示优化
============================

AgentScope 实现了一个用于优化智能体系统提示的模块。

.. _system-prompt-generator:

系统提示生成器
^^^^^^^^^^^^^^^^^^^^^^^^

系统提示生成器使用元提示（Meta prompt）来指导模型根据用户的要求生成系统提示，并允许开发人员使用内置示例或提供自己的示例作为上下文学习（ICL）。

系统提示生成器包括一个 `EnglishSystemPromptGenerator` 和一个 `ChineseSystemPromptGenerator` 模块，它们只在使用的语言上有所不同。

我们以 `ChineseSystemPromptGenerator` 为例,说明如何使用系统提示生成器。

初始化
^^^^^^^^^^^^^^^^^^^^^^^^

要初始化生成器,你需要首先在 `agentscope.init` 函数中注册你的模型配置。

.. GENERATED FROM PYTHON SOURCE LINES 26-37

.. code-block:: Python


    from agentscope.prompt import ChineseSystemPromptGenerator
    import agentscope

    model_config = {
        "model_type": "dashscope_chat",
        "config_name": "qwen_config",
        "model_name": "qwen-max",
        # 通过环境变量导出你的 api 密钥
    }








.. GENERATED FROM PYTHON SOURCE LINES 38-40

生成器将使用内置的默认元提示来指导大语言模型生成系统提示。


.. GENERATED FROM PYTHON SOURCE LINES 40-50

.. code-block:: Python


    agentscope.init(
        model_configs=model_config,
    )

    prompt_generator = ChineseSystemPromptGenerator(
        model_config_name="qwen_config",
    )









.. GENERATED FROM PYTHON SOURCE LINES 51-59

我们欢迎用户自由尝试不同的优化方法。我们提供了相应的 `SystemPromptGeneratorBase` 模块，可以通过继承来实现自定义的系统提示生成器。

生成系统提示
^^^^^^^^^^^^^^^^^^^^^^^^^

调用生成器的 `generate` 函数来生成系统提示，如下所示。

可以输入一个需求，或者要优化的系统提示。

.. GENERATED FROM PYTHON SOURCE LINES 59-66

.. code-block:: Python


    generated_system_prompt = prompt_generator.generate(
        user_input="为一位小红书营销专家生成系统提示，他负责推广书籍。",
    )

    print(generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```markdown
    ## 系统提示

    ### 角色描述
    你是一位富有创意与洞察力的小红书营销专家，专注于通过高质量的内容创作来推广书籍。你的目标是吸引潜在读者的兴趣，并最终促成书籍的销售。你熟悉小红书平台上的各种流行趋势、用户偏好以及内容发布规则。

    ### 技能点
    - **内容创作**：能够根据不同的书籍类型（如小说、非虚构作品等）和目标受众的特点，撰写吸引人的标题、引人入胜的简介及评论。
    - **视觉设计**：具备基础的图片编辑能力，可以为帖子挑选或制作合适的封面图和其他插图，以增强内容的吸引力。
    - **数据分析**：能够分析帖子的表现数据（如点赞数、评论量等），并据此调整策略以提高未来内容的效果。
    - **互动管理**：善于与粉丝建立良好的关系，包括回复评论中的问题、组织线上活动等，以此增加社区活跃度和品牌忠诚度。
    - **SEO优化**：了解如何在小红书平台上合理使用关键词，使发布的文章更容易被搜索到。

    ### 限制条件
    - 在创建内容时，请确保遵守小红书的所有规定和指导方针。
    - 内容必须保持正面积极的态度，避免任何可能引起争议的话题。
    - 虽然你可以建议使用特定的图片或视频作为配图，但实际获取这些资源的工作需要由专门负责多媒体素材准备的团队完成。
    - 如果需要引用书籍的具体章节或者详细信息，请明确指出${{book}}中相关部分的位置或页码，以便于后续查找。

    ### 可调用工具/知识库
    - **书籍数据库**：包含所有待推广书籍的基本信息（作者、出版社、出版日期等）及部分内容预览。
    - **社交媒体分析工具**：用于跟踪和评估所发布内容的表现情况。
    - **在线图片编辑器**：帮助快速生成或修改适合小红书风格的图片。
    - **关键词规划工具**：辅助选择最适合当前话题的小红书热门词汇。
    ```

    这个优化后的系统提示不仅明确了角色定位——一位专注于书籍推广的小红书营销专家，还具体列举了其所需具备的关键技能点，并设置了合理的执行边界。同时，也指出了为了完成任务可能需要用到的一些外部工具或资源。




.. GENERATED FROM PYTHON SOURCE LINES 67-86

上下文学习（ICL）
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

AgentScope 在系统提示生成中支持上下文学习。

要使用示例，AgentScope 提供了以下参数:

- `example_num`: 附加到元提示的示例数量，默认为 0
- `example_selection_strategy`: 选择示例的策略，可选 "random" 和 "similarity"。
- `example_list`: 一个示例列表，其中每个示例必须是一个带有键 "user_prompt" 和 "opt_prompt" 的字典。如果未指定,将使用内置的示例列表。

注意，如果你选择 "similarity" 作为示例选择策略，你需要在 `embed_model_config_name` 或 `local_embedding_model` 参数中指定一个嵌入模型。

它们的区别如下:

- `embed_model_config_name`: 你必须先在 `agentscope.init` 中注册嵌入模型，并在此参数中指定模型配置名称。
- `local_embedding_model`: 或者，你可以使用 `sentence_transformers.SentenceTransformer` 库支持的本地小型嵌入模型。

如果你不指定上述参数，AgentScope 将使用默认的 "sentence-transformers/all-mpnet-base-v2" 模型，该模型可在 CPU 上运行。

.. GENERATED FROM PYTHON SOURCE LINES 86-99

.. code-block:: Python


    icl_generator = ChineseSystemPromptGenerator(
        model_config_name="qwen_config",
        example_num=3,
        example_selection_strategy="random",
    )

    icl_generated_system_prompt = icl_generator.generate(
        user_input="为一位小红书营销专家生成系统提示，他负责推广书籍。",
    )

    print(icl_generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```
    # 角色
    你是一位小红书营销专家，专注于书籍的推广工作。你的目标是通过创意内容和策略来吸引更多的读者关注和购买书籍。

    ## 技能
    ### 技能 1：内容创作与编辑
    - 创作吸引人的标题和封面图，以提高点击率。
    - 撰写有趣且有价值的内容，如书籍简介、作者介绍、书评等。
    - 使用合适的标签（#话题）来增加内容的曝光度。

    ### 技能 2：数据分析与优化
    - 分析帖子的数据表现，包括点赞数、评论数、分享数等。
    - 根据数据反馈调整内容策略，以提高用户参与度和转化率。

    ### 技能 3：社区互动与管理
    - 积极回应用户的评论和私信，建立良好的社区关系。
    - 组织线上活动，如读书会、问答环节等，增强用户粘性。

    ### 技能 4：合作与推广
    - 寻找并联系潜在的合作方，如出版社、书店、其他博主等。
    - 制定联合推广计划，共同扩大书籍影响力。

    ## 约束
    - 所有内容必须遵守小红书平台规则，不得包含任何违规信息。
    - 推广时需保持内容的真实性与客观性，避免夸大其词或误导消费者。
    - 在推荐书籍时，应充分考虑受众群体的特点和兴趣偏好，确保内容的相关性和吸引力。
    - 明确标注赞助或广告性质的内容，保证透明度。
    ```




.. GENERATED FROM PYTHON SOURCE LINES 100-103

.. note:: 1. 样例的 Embedding 将被缓存在 `~/.cache/agentscope/` 中，以避免重复计算。
 2. `EnglishSystemPromptGenerator` 和 `ChineseSystemPromptGenerator` 的内置示例数量分别为 18 和 37。请注意 Embedding API 服务的成本。



.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 18.901 seconds)


.. _sphx_glr_download_build_tutorial_prompt_optimization.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: prompt_optimization.ipynb <prompt_optimization.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: prompt_optimization.py <prompt_optimization.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: prompt_optimization.zip <prompt_optimization.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
