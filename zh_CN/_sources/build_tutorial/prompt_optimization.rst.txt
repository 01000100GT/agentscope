
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "build_tutorial/prompt_optimization.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_build_tutorial_prompt_optimization.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_build_tutorial_prompt_optimization.py:


.. _system-prompt-optimization:

系统提示优化
============================

AgentScope 实现了一个用于优化智能体系统提示的模块。

.. _system-prompt-generator:

系统提示生成器
^^^^^^^^^^^^^^^^^^^^^^^^

系统提示生成器使用元提示（Meta prompt）来指导模型根据用户的要求生成系统提示，并允许开发人员使用内置示例或提供自己的示例作为上下文学习（ICL）。

系统提示生成器包括一个 `EnglishSystemPromptGenerator` 和一个 `ChineseSystemPromptGenerator` 模块，它们只在使用的语言上有所不同。

我们以 `ChineseSystemPromptGenerator` 为例,说明如何使用系统提示生成器。

初始化
^^^^^^^^^^^^^^^^^^^^^^^^

要初始化生成器,你需要首先在 `agentscope.init` 函数中注册你的模型配置。

.. GENERATED FROM PYTHON SOURCE LINES 26-37

.. code-block:: Python


    from agentscope.prompt import ChineseSystemPromptGenerator
    import agentscope

    model_config = {
        "model_type": "dashscope_chat",
        "config_name": "qwen_config",
        "model_name": "qwen-max",
        # 通过环境变量导出你的 api 密钥
    }








.. GENERATED FROM PYTHON SOURCE LINES 38-40

生成器将使用内置的默认元提示来指导大语言模型生成系统提示。


.. GENERATED FROM PYTHON SOURCE LINES 40-50

.. code-block:: Python


    agentscope.init(
        model_configs=model_config,
    )

    prompt_generator = ChineseSystemPromptGenerator(
        model_config_name="qwen_config",
    )









.. GENERATED FROM PYTHON SOURCE LINES 51-59

我们欢迎用户自由尝试不同的优化方法。我们提供了相应的 `SystemPromptGeneratorBase` 模块，可以通过继承来实现自定义的系统提示生成器。

生成系统提示
^^^^^^^^^^^^^^^^^^^^^^^^^

调用生成器的 `generate` 函数来生成系统提示，如下所示。

可以输入一个需求，或者要优化的系统提示。

.. GENERATED FROM PYTHON SOURCE LINES 59-66

.. code-block:: Python


    generated_system_prompt = prompt_generator.generate(
        user_input="为一位小红书营销专家生成系统提示，他负责推广书籍。",
    )

    print(generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```markdown
    ## 系统提示

    ### 角色描述
    你是一位富有创意且经验丰富的书籍营销专家，专注于通过小红书平台推广各类书籍。你的工作不仅限于吸引读者的注意力，更重要的是激发他们对阅读的兴趣，并促进书籍销售。你了解小红书社区的文化和用户偏好，能够根据目标受众的特点制定有效的营销策略。

    ### 技能点
    - **内容创作**：擅长撰写吸引人的书籍简介、书评以及与书籍相关的有趣故事或感悟，能够根据不同类型的书籍（如小说、非虚构作品、专业书籍等）调整写作风格。
    - **视觉设计**：具备基础的图片编辑能力，能够为书籍创建吸引眼球的封面图或配图，提高帖子的吸引力。
    - **趋势洞察**：密切关注小红书上的热门话题和流行趋势，能够将这些元素融入到书籍推广中，增加内容的相关性和时效性。
    - **互动管理**：懂得如何与粉丝建立良好关系，通过回复评论、发起话题讨论等方式增强用户参与度；同时也能处理负面反馈，维护品牌形象。
    - **数据分析**：能够利用小红书提供的分析工具监测推广效果，包括但不限于阅读量、点赞数、分享次数等关键指标，基于数据调整优化策略。

    ### 限制
    - 在进行书籍推荐时，请确保所有信息的真实性，避免夸大其词。
    - 尊重版权，不发布任何未经授权的内容。
    - 避免使用过于直接的硬广形式，保持内容的自然流畅，让读者感受到价值而非推销压力。
    - 对于特定领域（如医学、法律等）的专业书籍，在没有专业知识背景的情况下，不要尝试自行解释书中内容，可以引用权威来源或邀请相关领域的专家合作。
    - 注意遵守小红书社区准则及法律法规，保证所有活动合法合规。

    ### 可调用工具
    - **搜索工具**：用于查找最新的书籍资讯、作者采访、书评等内容。
    - **图片编辑软件**：帮助制作高质量的书籍封面图或其他视觉素材。
    - **社交媒体分析工具**：辅助跟踪并分析发布的每一条动态的表现情况，指导后续内容规划。
    ```

    这个优化后的系统提示旨在为你提供一个更加具体而全面的角色设定和技能框架，以便更好地执行书籍在小红书上的营销任务。希望这对你有所帮助！




.. GENERATED FROM PYTHON SOURCE LINES 67-86

上下文学习（ICL）
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

AgentScope 在系统提示生成中支持上下文学习。

要使用示例，AgentScope 提供了以下参数:

- `example_num`: 附加到元提示的示例数量，默认为 0
- `example_selection_strategy`: 选择示例的策略，可选 "random" 和 "similarity"。
- `example_list`: 一个示例列表，其中每个示例必须是一个带有键 "user_prompt" 和 "opt_prompt" 的字典。如果未指定,将使用内置的示例列表。

注意，如果你选择 "similarity" 作为示例选择策略，你需要在 `embed_model_config_name` 或 `local_embedding_model` 参数中指定一个嵌入模型。

它们的区别如下:

- `embed_model_config_name`: 你必须先在 `agentscope.init` 中注册嵌入模型，并在此参数中指定模型配置名称。
- `local_embedding_model`: 或者，你可以使用 `sentence_transformers.SentenceTransformer` 库支持的本地小型嵌入模型。

如果你不指定上述参数，AgentScope 将使用默认的 "sentence-transformers/all-mpnet-base-v2" 模型，该模型可在 CPU 上运行。

.. GENERATED FROM PYTHON SOURCE LINES 86-99

.. code-block:: Python


    icl_generator = ChineseSystemPromptGenerator(
        model_config_name="qwen_config",
        example_num=3,
        example_selection_strategy="random",
    )

    icl_generated_system_prompt = icl_generator.generate(
        user_input="为一位小红书营销专家生成系统提示，他负责推广书籍。",
    )

    print(icl_generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```
    # 角色
    你是一位小红书营销专家，专注于书籍推广。你具备丰富的社交媒体运营经验和创意内容生产能力，能够有效吸引目标读者群体的关注，并促进书籍销售。

    ## 报告技能
    ### 技能 1: 创意内容创作
    - 根据书籍的内容和特点，设计吸引人的标题、封面图片和文案。
    - 创作与书籍主题相关的高质量图文或视频内容，以激发用户的兴趣并提高互动率。

    ### 技能 2: 社区互动管理
    - 主动参与小红书社区内的讨论，回答用户关于书籍的问题，建立良好的品牌形象。
    - 定期举办线上活动（如读书分享会、作者见面会等），增加粉丝粘性。

    ### 技能 3: 数据分析与优化
    - 分析发布内容的表现数据（如阅读量、点赞数、评论等），了解用户偏好。
    - 根据数据分析结果调整策略，持续优化内容质量和推广效果。

    ## 限制：
    - 所有发布的推广内容必须遵守小红书平台规则及法律法规。
    - 在进行书籍推广时，确保信息的真实性，不得夸大其词或误导消费者。
    - 尊重版权，未经许可不得使用他人的原创作品作为推广素材。
    ```




.. GENERATED FROM PYTHON SOURCE LINES 100-103

.. note:: 1. 样例的 Embedding 将被缓存在 `~/.cache/agentscope/` 中，以避免重复计算。
 2. `EnglishSystemPromptGenerator` 和 `ChineseSystemPromptGenerator` 的内置示例数量分别为 18 和 37。请注意 Embedding API 服务的成本。



.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 58.955 seconds)


.. _sphx_glr_download_build_tutorial_prompt_optimization.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: prompt_optimization.ipynb <prompt_optimization.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: prompt_optimization.py <prompt_optimization.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: prompt_optimization.zip <prompt_optimization.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
