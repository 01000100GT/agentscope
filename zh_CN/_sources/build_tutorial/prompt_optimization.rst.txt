
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "build_tutorial/prompt_optimization.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_build_tutorial_prompt_optimization.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_build_tutorial_prompt_optimization.py:


.. _system-prompt-optimization:

系统提示优化
============================

AgentScope 实现了一个用于优化智能体系统提示的模块。

.. _system-prompt-generator:

系统提示生成器
^^^^^^^^^^^^^^^^^^^^^^^^

系统提示生成器使用元提示（Meta prompt）来指导模型根据用户的要求生成系统提示，并允许开发人员使用内置示例或提供自己的示例作为上下文学习（ICL）。

系统提示生成器包括一个 `EnglishSystemPromptGenerator` 和一个 `ChineseSystemPromptGenerator` 模块，它们只在使用的语言上有所不同。

我们以 `ChineseSystemPromptGenerator` 为例,说明如何使用系统提示生成器。

初始化
^^^^^^^^^^^^^^^^^^^^^^^^

要初始化生成器,你需要首先在 `agentscope.init` 函数中注册你的模型配置。

.. GENERATED FROM PYTHON SOURCE LINES 26-37

.. code-block:: Python


    from agentscope.prompt import ChineseSystemPromptGenerator
    import agentscope

    model_config = {
        "model_type": "dashscope_chat",
        "config_name": "qwen_config",
        "model_name": "qwen-max",
        # 通过环境变量导出你的 api 密钥
    }








.. GENERATED FROM PYTHON SOURCE LINES 38-40

生成器将使用内置的默认元提示来指导大语言模型生成系统提示。


.. GENERATED FROM PYTHON SOURCE LINES 40-50

.. code-block:: Python


    agentscope.init(
        model_configs=model_config,
    )

    prompt_generator = ChineseSystemPromptGenerator(
        model_config_name="qwen_config",
    )









.. GENERATED FROM PYTHON SOURCE LINES 51-59

我们欢迎用户自由尝试不同的优化方法。我们提供了相应的 `SystemPromptGeneratorBase` 模块，可以通过继承来实现自定义的系统提示生成器。

生成系统提示
^^^^^^^^^^^^^^^^^^^^^^^^^

调用生成器的 `generate` 函数来生成系统提示，如下所示。

可以输入一个需求，或者要优化的系统提示。

.. GENERATED FROM PYTHON SOURCE LINES 59-66

.. code-block:: Python


    generated_system_prompt = prompt_generator.generate(
        user_input="为一位小红书营销专家生成系统提示，他负责推广书籍。",
    )

    print(generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```markdown
    ## 系统提示

    ### 角色描述
    你是一位小红书营销专家，专注于推广各类书籍。你需要具备敏锐的市场洞察力和创新思维，能够根据不同的书籍类型和目标读者群体，制定有效的营销策略。

    ### 技能点
    1. **市场分析**：能够对小红书平台上的用户行为、热门话题和趋势进行深入分析，以确定最佳的推广时机和内容。
    2. **内容创作**：擅长撰写吸引人的标题和文案，能够根据不同书籍的特点和目标受众，创作出高质量的小红书笔记。
    3. **视觉设计**：具备基本的图像处理和设计能力，能够制作吸引眼球的封面图和插图，提升内容的吸引力。
    4. **互动管理**：能够有效管理评论区和私信，与粉丝保持良好的互动，提高用户粘性和参与度。
    5. **数据分析**：能够使用小红书提供的数据分析工具，跟踪和评估营销活动的效果，不断优化策略。

    ### 限制
    1. **内容原创性**：所有发布的内容必须是原创的，不得抄袭或复制他人的作品。
    2. **合规性**：遵守小红书的社区规则和法律法规，不得发布任何违法或违规的内容。
    3. **时效性**：确保发布的营销内容具有时效性，及时跟进热点话题和事件，提高内容的曝光率。

    ### 工具和资源
    - **小红书官方数据分析工具**：用于跟踪和评估营销活动的效果。
    - **图片编辑软件**（如Canva）：用于制作吸引眼球的封面图和插图。
    - **关键词研究工具**（如百度指数、微信指数）：用于分析热门话题和趋势。

    ### 示例任务
    - 为一本新出版的小说撰写一篇吸引人的小红书笔记，并附上精美的封面图。
    - 分析当前小红书上的热门话题，选择一个适合推广的时机，发布相关书籍的推广内容。
    - 跟踪并回复评论区的用户反馈，提高用户参与度和满意度。

    通过以上技能和限制，你将能够高效地在小红书平台上推广各类书籍，吸引更多读者的关注。
    ```

    这个优化后的系统提示详细描述了小红书营销专家的角色、技能点和限制，并提供了具体的工具和示例任务，以帮助更好地完成书籍推广的任务。




.. GENERATED FROM PYTHON SOURCE LINES 67-86

上下文学习（ICL）
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

AgentScope 在系统提示生成中支持上下文学习。

要使用示例，AgentScope 提供了以下参数:

- `example_num`: 附加到元提示的示例数量，默认为 0
- `example_selection_strategy`: 选择示例的策略，可选 "random" 和 "similarity"。
- `example_list`: 一个示例列表，其中每个示例必须是一个带有键 "user_prompt" 和 "opt_prompt" 的字典。如果未指定,将使用内置的示例列表。

注意，如果你选择 "similarity" 作为示例选择策略，你需要在 `embed_model_config_name` 或 `local_embedding_model` 参数中指定一个嵌入模型。

它们的区别如下:

- `embed_model_config_name`: 你必须先在 `agentscope.init` 中注册嵌入模型，并在此参数中指定模型配置名称。
- `local_embedding_model`: 或者，你可以使用 `sentence_transformers.SentenceTransformer` 库支持的本地小型嵌入模型。

如果你不指定上述参数，AgentScope 将使用默认的 "sentence-transformers/all-mpnet-base-v2" 模型，该模型可在 CPU 上运行。

.. GENERATED FROM PYTHON SOURCE LINES 86-99

.. code-block:: Python


    icl_generator = ChineseSystemPromptGenerator(
        model_config_name="qwen_config",
        example_num=3,
        example_selection_strategy="random",
    )

    icl_generated_system_prompt = icl_generator.generate(
        user_input="为一位小红书营销专家生成系统提示，他负责推广书籍。",
    )

    print(icl_generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```markdown
    # 角色
    你是小红书营销专家，专注于书籍推广。

    # 所处世界
    你在一个充满竞争的数字营销环境中工作，主要在小红书平台上进行书籍推广活动。你需要不断跟进最新的市场趋势和用户需求，以确保推广效果最大化。

    # 人物特质
    性格：热情、创新、细心。
    优点：对小红书平台有深入了解，擅长内容创作和用户互动。
    缺点：有时可能过于追求完美，导致工作效率降低。
    特质：善于利用数据分析优化推广策略，能够精准定位目标受众。

    # 生活背景
    你是一位经验丰富的数字营销专家，拥有多年的书籍推广经验。你熟悉小红书的用户群体和内容生态，能够通过创意内容吸引并保持用户的关注。

    # 技能点
    - 熟练掌握小红书平台的各种功能和工具。
    - 能够撰写高质量的小红书笔记，包括但不限于书籍推荐、读书心得、作者访谈等。
    - 具备数据分析能力，能够通过数据反馈优化推广策略。
    - 擅长与用户互动，能够建立和维护良好的社区关系。
    - 了解最新书籍市场动态，能够根据市场需求调整推广方向。

    # 语言风格
    你的语言风格简洁明了，富有吸引力。你会使用流行语和表情符号来增强表达力，使内容更加生动有趣。每段输出不超过50字，句子简短有力，适合小红书的阅读习惯。

    # 用户扮演
    用户将扮演一位希望在小红书上推广自己书籍的作者或出版社代表，期待你的专业建议和具体推广方案。
    ```




.. GENERATED FROM PYTHON SOURCE LINES 100-103

.. note:: 1. 样例的 Embedding 将被缓存在 `~/.cache/agentscope/` 中，以避免重复计算。
 2. `EnglishSystemPromptGenerator` 和 `ChineseSystemPromptGenerator` 的内置示例数量分别为 18 和 37。请注意 Embedding API 服务的成本。



.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 38.909 seconds)


.. _sphx_glr_download_build_tutorial_prompt_optimization.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: prompt_optimization.ipynb <prompt_optimization.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: prompt_optimization.py <prompt_optimization.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: prompt_optimization.zip <prompt_optimization.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
