
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "build_tutorial/prompt_optimization.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_build_tutorial_prompt_optimization.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_build_tutorial_prompt_optimization.py:


.. _system-prompt-optimization:

系统提示优化
============================

AgentScope 实现了一个用于优化智能体系统提示的模块。

.. _system-prompt-generator:

系统提示生成器
^^^^^^^^^^^^^^^^^^^^^^^^

系统提示生成器使用元提示（Meta prompt）来指导模型根据用户的要求生成系统提示，并允许开发人员使用内置示例或提供自己的示例作为上下文学习（ICL）。

系统提示生成器包括一个 `EnglishSystemPromptGenerator` 和一个 `ChineseSystemPromptGenerator` 模块，它们只在使用的语言上有所不同。

我们以 `ChineseSystemPromptGenerator` 为例,说明如何使用系统提示生成器。

初始化
^^^^^^^^^^^^^^^^^^^^^^^^

要初始化生成器,你需要首先在 `agentscope.init` 函数中注册你的模型配置。

.. GENERATED FROM PYTHON SOURCE LINES 26-37

.. code-block:: Python


    from agentscope.prompt import ChineseSystemPromptGenerator
    import agentscope

    model_config = {
        "model_type": "dashscope_chat",
        "config_name": "qwen_config",
        "model_name": "qwen-max",
        # 通过环境变量导出你的 api 密钥
    }








.. GENERATED FROM PYTHON SOURCE LINES 38-40

生成器将使用内置的默认元提示来指导大语言模型生成系统提示。


.. GENERATED FROM PYTHON SOURCE LINES 40-50

.. code-block:: Python


    agentscope.init(
        model_configs=model_config,
    )

    prompt_generator = ChineseSystemPromptGenerator(
        model_config_name="qwen_config",
    )









.. GENERATED FROM PYTHON SOURCE LINES 51-59

我们欢迎用户自由尝试不同的优化方法。我们提供了相应的 `SystemPromptGeneratorBase` 模块，可以通过继承来实现自定义的系统提示生成器。

生成系统提示
^^^^^^^^^^^^^^^^^^^^^^^^^

调用生成器的 `generate` 函数来生成系统提示，如下所示。

可以输入一个需求，或者要优化的系统提示。

.. GENERATED FROM PYTHON SOURCE LINES 59-66

.. code-block:: Python


    generated_system_prompt = prompt_generator.generate(
        user_input="为一位小红书营销专家生成系统提示，他负责推广书籍。",
    )

    print(generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```markdown
    ## 系统提示

    ### 角色描述
    你是一位小红书营销专家，专注于推广书籍。你需要具备出色的文案撰写能力、内容策划能力和市场分析能力，以便在小红书平台上有效地推广各类书籍。

    ### 技能点
    1. **文案撰写**：能够撰写吸引人的标题和内容，包括但不限于书籍推荐、书评、读书笔记等。
    2. **内容策划**：能够根据不同的书籍类型和目标受众，策划合适的内容主题和形式，如图文、视频、直播等。
    3. **市场分析**：能够分析小红书上的用户行为和热门趋势，制定有效的推广策略。
    4. **互动管理**：能够与粉丝进行有效互动，回复评论、私信等，提高用户粘性和品牌忠诚度。
    5. **数据分析**：能够使用小红书提供的数据分析工具，监控推广效果并进行优化调整。

    ### 限制
    1. **内容质量**：确保所有发布的内容都是高质量的，符合小红书社区规范。
    2. **原创性**：所有文案和内容必须是原创的，不得抄袭或侵犯他人版权。
    3. **频率**：合理安排发布频率，避免过度刷屏或长时间不更新。
    4. **广告合规**：遵守小红书平台的广告政策，不得发布违规广告内容。

    ### 工具
    - **小红书数据分析工具**：用于监控和分析推广效果。
    - **搜索引擎**：用于获取最新的市场趋势和竞争对手信息（如果需要调用搜索功能，请注明）。
    - **知识库**：包含书籍相关信息和小红书营销最佳实践（如果提供）。

    ### 上下文
    - 请根据当前的小红书热门话题和目标受众的兴趣，制定推广策略。
    - 请定期检查和更新推广内容，确保其时效性和相关性。

    ### 示例任务
    - 撰写一篇关于《活着》的书评，并附上精美的图片和标签。
    - 策划一场关于科幻小说的直播活动，邀请知名作者参与。
    - 分析最近一个月内小红书上关于心理学书籍的热门话题，制定相应的推广计划。

    ### 注意事项
    - 请确保所有内容都符合小红书的社区规范和广告政策。
    - 请保持与粉丝的良好互动，及时回复评论和私信。
    - 请定期分析推广效果，不断优化推广策略。
    ```

    这个优化后的系统提示详细描述了角色、技能点、限制和工具，同时提供了示例任务和注意事项，以帮助你在小红书上更有效地推广书籍。




.. GENERATED FROM PYTHON SOURCE LINES 67-86

上下文学习（ICL）
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

AgentScope 在系统提示生成中支持上下文学习。

要使用示例，AgentScope 提供了以下参数:

- `example_num`: 附加到元提示的示例数量，默认为 0
- `example_selection_strategy`: 选择示例的策略，可选 "random" 和 "similarity"。
- `example_list`: 一个示例列表，其中每个示例必须是一个带有键 "user_prompt" 和 "opt_prompt" 的字典。如果未指定,将使用内置的示例列表。

注意，如果你选择 "similarity" 作为示例选择策略，你需要在 `embed_model_config_name` 或 `local_embedding_model` 参数中指定一个嵌入模型。

它们的区别如下:

- `embed_model_config_name`: 你必须先在 `agentscope.init` 中注册嵌入模型，并在此参数中指定模型配置名称。
- `local_embedding_model`: 或者，你可以使用 `sentence_transformers.SentenceTransformer` 库支持的本地小型嵌入模型。

如果你不指定上述参数，AgentScope 将使用默认的 "sentence-transformers/all-mpnet-base-v2" 模型，该模型可在 CPU 上运行。

.. GENERATED FROM PYTHON SOURCE LINES 86-99

.. code-block:: Python


    icl_generator = ChineseSystemPromptGenerator(
        model_config_name="qwen_config",
        example_num=3,
        example_selection_strategy="random",
    )

    icl_generated_system_prompt = icl_generator.generate(
        user_input="为一位小红书营销专家生成系统提示，他负责推广书籍。",
    )

    print(icl_generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```
    # 角色
    你是一位小红书营销专家，专注于书籍推广。你具备丰富的社交媒体运营经验和对书籍市场的深刻理解。

    ## 技能
    ### 技能1：内容创作
    - 能够撰写吸引人的书籍推荐文案，包括但不限于书籍简介、作者背景、读者评价等。
    - 创作与书籍相关的高质量图文或视频内容，以提高用户的阅读兴趣和互动率。

    ### 抃能2：数据分析
    - 通过分析小红书平台的数据（如点赞、评论、分享等），优化推广策略，提高书籍的曝光度和转化率。
    - 了解目标受众的行为习惯和偏好，制定针对性的营销计划。

    ### 技能3：用户互动
    - 与粉丝进行有效互动，回复评论和私信，建立良好的社区氛围。
    - 组织线上活动（如读书会、赠书活动等），增加用户参与度和粘性。

    ### 技能4：跨平台推广
    - 结合其他社交媒体平台（如微博、抖音等）进行多渠道推广，扩大书籍的影响力。
    - 与其他KOL或品牌合作，开展联合营销活动，提升书籍的知名度。

    ## 限制
    - 所有推广内容必须符合小红书的社区规范和法律法规。
    - 推广过程中不得使用虚假信息或夸大其词，确保内容的真实性和可靠性。
    - 尊重版权，不得未经授权使用他人的文字、图片或视频素材。
    - 保持专业态度，避免发布低俗或不适宜的内容。
    ```




.. GENERATED FROM PYTHON SOURCE LINES 100-103

.. note:: 1. 样例的 Embedding 将被缓存在 `~/.cache/agentscope/` 中，以避免重复计算。
 2. `EnglishSystemPromptGenerator` 和 `ChineseSystemPromptGenerator` 的内置示例数量分别为 18 和 37。请注意 Embedding API 服务的成本。



.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 41.297 seconds)


.. _sphx_glr_download_build_tutorial_prompt_optimization.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: prompt_optimization.ipynb <prompt_optimization.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: prompt_optimization.py <prompt_optimization.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: prompt_optimization.zip <prompt_optimization.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
