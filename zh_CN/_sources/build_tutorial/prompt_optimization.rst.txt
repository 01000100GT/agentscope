
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "build_tutorial/prompt_optimization.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_build_tutorial_prompt_optimization.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_build_tutorial_prompt_optimization.py:


.. _system-prompt-optimization:

系统提示优化
============================

AgentScope 实现了一个用于优化智能体系统提示的模块。

.. _system-prompt-generator:

系统提示生成器
^^^^^^^^^^^^^^^^^^^^^^^^

系统提示生成器使用元提示（Meta prompt）来指导模型根据用户的要求生成系统提示，并允许开发人员使用内置示例或提供自己的示例作为上下文学习（ICL）。

系统提示生成器包括一个 `EnglishSystemPromptGenerator` 和一个 `ChineseSystemPromptGenerator` 模块，它们只在使用的语言上有所不同。

我们以 `ChineseSystemPromptGenerator` 为例,说明如何使用系统提示生成器。

初始化
^^^^^^^^^^^^^^^^^^^^^^^^

要初始化生成器,你需要首先在 `agentscope.init` 函数中注册你的模型配置。

.. GENERATED FROM PYTHON SOURCE LINES 26-37

.. code-block:: Python


    from agentscope.prompt import ChineseSystemPromptGenerator
    import agentscope

    model_config = {
        "model_type": "dashscope_chat",
        "config_name": "qwen_config",
        "model_name": "qwen-max",
        # 通过环境变量导出你的 api 密钥
    }








.. GENERATED FROM PYTHON SOURCE LINES 38-40

生成器将使用内置的默认元提示来指导大语言模型生成系统提示。


.. GENERATED FROM PYTHON SOURCE LINES 40-50

.. code-block:: Python


    agentscope.init(
        model_configs=model_config,
    )

    prompt_generator = ChineseSystemPromptGenerator(
        model_config_name="qwen_config",
    )









.. GENERATED FROM PYTHON SOURCE LINES 51-59

我们欢迎用户自由尝试不同的优化方法。我们提供了相应的 `SystemPromptGeneratorBase` 模块，可以通过继承来实现自定义的系统提示生成器。

生成系统提示
^^^^^^^^^^^^^^^^^^^^^^^^^

调用生成器的 `generate` 函数来生成系统提示，如下所示。

可以输入一个需求，或者要优化的系统提示。

.. GENERATED FROM PYTHON SOURCE LINES 59-66

.. code-block:: Python


    generated_system_prompt = prompt_generator.generate(
        user_input="为一位小红书营销专家生成系统提示，他负责推广书籍。",
    )

    print(generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```markdown
    ## 系统提示

    ### 角色描述
    你是一位小红书营销专家，专注于书籍推广。你的目标是通过创造吸引人的内容来提高书籍的知名度和销量。你熟悉小红书平台的特点、用户偏好以及如何利用这些特点有效地推广产品。

    ### 技能点
    - **内容创作**：能够根据书籍的内容和目标受众撰写吸引人且富有创意的小红书笔记，包括但不限于书评、读后感分享、作者访谈等。
    - **视觉设计**：具备基本的设计能力，可以为发布的笔记添加美观且符合品牌形象的图片或视频，增强内容的吸引力。
    - **数据分析**：能够分析笔记的表现数据（如点赞数、评论数等），并据此调整策略以优化未来的推广活动。
    - **互动管理**：积极与粉丝互动，回应他们的评论和私信，建立良好的社区关系。
    - **趋势追踪**：持续关注小红书上的热门话题及流行趋势，确保所发布的内容紧跟潮流，增加曝光机会。

    ### 限制条件
    - 所有发布的笔记必须遵守小红书社区指南及相关法律法规。
    - 推广时需保持诚实透明的态度，不得夸大其词或误导消费者。
    - 注意保护个人隐私信息，在与粉丝交流过程中避免泄露敏感资料。
    - 当需要获取外部信息（例如最新市场动态）时，请调用搜索工具来辅助完成任务。
    - 若涉及到特定领域的专业知识，可能需要查阅相关知识库以确保信息准确性。

    ### 可调用工具
    - 搜索引擎：用于查找最新的市场趋势、竞争对手分析等信息。
    - 图片编辑软件：帮助创建高质量的视觉素材。
    - 数据分析工具：支持对笔记表现进行深入分析。
    ```

    这个系统提示不仅定义了角色作为一个小红书营销专家的身份，还详细列举了执行任务所需的各项技能，并明确了在哪些情况下需要借助额外工具的支持。同时，它也设置了若干限制条件以确保所有操作都在合规范围内进行。




.. GENERATED FROM PYTHON SOURCE LINES 67-86

上下文学习（ICL）
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

AgentScope 在系统提示生成中支持上下文学习。

要使用示例，AgentScope 提供了以下参数:

- `example_num`: 附加到元提示的示例数量，默认为 0
- `example_selection_strategy`: 选择示例的策略，可选 "random" 和 "similarity"。
- `example_list`: 一个示例列表，其中每个示例必须是一个带有键 "user_prompt" 和 "opt_prompt" 的字典。如果未指定,将使用内置的示例列表。

注意，如果你选择 "similarity" 作为示例选择策略，你需要在 `embed_model_config_name` 或 `local_embedding_model` 参数中指定一个嵌入模型。

它们的区别如下:

- `embed_model_config_name`: 你必须先在 `agentscope.init` 中注册嵌入模型，并在此参数中指定模型配置名称。
- `local_embedding_model`: 或者，你可以使用 `sentence_transformers.SentenceTransformer` 库支持的本地小型嵌入模型。

如果你不指定上述参数，AgentScope 将使用默认的 "sentence-transformers/all-mpnet-base-v2" 模型，该模型可在 CPU 上运行。

.. GENERATED FROM PYTHON SOURCE LINES 86-99

.. code-block:: Python


    icl_generator = ChineseSystemPromptGenerator(
        model_config_name="qwen_config",
        example_num=3,
        example_selection_strategy="random",
    )

    icl_generated_system_prompt = icl_generator.generate(
        user_input="为一位小红书营销专家生成系统提示，他负责推广书籍。",
    )

    print(icl_generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```markdown
    # 角色
    你是一位小红书营销专家，专注于书籍推广。你的目标是通过创造性的内容和策略吸引读者兴趣，并最终促进书籍销量的增长。

    ## 技能
    ### 技能1: 内容创作
    - 根据书籍的内容和风格，撰写吸引人的标题、简介以及详细书评。
    - 制作与书籍相关的高质量图片或视频内容，以增加视觉吸引力。
    - 使用适当的话题标签（如#好书推荐 #读书笔记），以提高帖子的可见度。

    ### 抌能2: 社区互动
    - 积极参与社区讨论，回复粉丝留言，建立忠实读者群。
    - 定期举办线上活动，比如赠书、问答等，增强用户参与感。
    - 与其他博主合作，扩大影响力范围。

    ### 技能3: 数据分析
    - 分析发布的每篇内容的表现情况，包括点赞数、评论数、分享次数等指标。
    - 根据数据反馈调整内容策略，优化推广效果。
    - 追踪竞争对手动态及市场趋势，及时调整自己的营销计划。

    ## 限制
    - 所有建议必须符合小红书平台规则，避免使用任何违规手段进行推广。
    - 在推广过程中保持诚实透明的态度，不夸大其词也不隐瞒事实。
    - 尊重版权，确保所有引用或使用的材料都已获得合法授权。
    - 保持专业形象，避免发表任何可能引起争议的观点或言论。
    ```

    这个优化后的system prompt不仅明确了角色定位——即一位专门从事书籍推广的小红书营销专家，还详细列出了所需掌握的关键技能点，同时设定了合理的限制条件，保证了行动的有效性和合规性。




.. GENERATED FROM PYTHON SOURCE LINES 100-103

.. note:: 1. 样例的 Embedding 将被缓存在 `~/.cache/agentscope/` 中，以避免重复计算。
 2. `EnglishSystemPromptGenerator` 和 `ChineseSystemPromptGenerator` 的内置示例数量分别为 18 和 37。请注意 Embedding API 服务的成本。



.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 55.615 seconds)


.. _sphx_glr_download_build_tutorial_prompt_optimization.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: prompt_optimization.ipynb <prompt_optimization.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: prompt_optimization.py <prompt_optimization.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: prompt_optimization.zip <prompt_optimization.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
