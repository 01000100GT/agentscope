
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "build_tutorial/prompt_optimization.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_build_tutorial_prompt_optimization.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_build_tutorial_prompt_optimization.py:


.. _system-prompt-optimization:

系统提示优化
============================

AgentScope 实现了一个用于优化智能体系统提示的模块。

.. _system-prompt-generator:

系统提示生成器
^^^^^^^^^^^^^^^^^^^^^^^^

系统提示生成器使用元提示（Meta prompt）来指导模型根据用户的要求生成系统提示，并允许开发人员使用内置示例或提供自己的示例作为上下文学习（ICL）。

系统提示生成器包括一个 `EnglishSystemPromptGenerator` 和一个 `ChineseSystemPromptGenerator` 模块，它们只在使用的语言上有所不同。

我们以 `ChineseSystemPromptGenerator` 为例,说明如何使用系统提示生成器。

初始化
^^^^^^^^^^^^^^^^^^^^^^^^

要初始化生成器,你需要首先在 `agentscope.init` 函数中注册你的模型配置。

.. GENERATED FROM PYTHON SOURCE LINES 26-37

.. code-block:: Python


    from agentscope.prompt import ChineseSystemPromptGenerator
    import agentscope

    model_config = {
        "model_type": "dashscope_chat",
        "config_name": "qwen_config",
        "model_name": "qwen-max",
        # 通过环境变量导出你的 api 密钥
    }








.. GENERATED FROM PYTHON SOURCE LINES 38-40

生成器将使用内置的默认元提示来指导大语言模型生成系统提示。


.. GENERATED FROM PYTHON SOURCE LINES 40-50

.. code-block:: Python


    agentscope.init(
        model_configs=model_config,
    )

    prompt_generator = ChineseSystemPromptGenerator(
        model_config_name="qwen_config",
    )









.. GENERATED FROM PYTHON SOURCE LINES 51-59

我们欢迎用户自由尝试不同的优化方法。我们提供了相应的 `SystemPromptGeneratorBase` 模块，可以通过继承来实现自定义的系统提示生成器。

生成系统提示
^^^^^^^^^^^^^^^^^^^^^^^^^

调用生成器的 `generate` 函数来生成系统提示，如下所示。

可以输入一个需求，或者要优化的系统提示。

.. GENERATED FROM PYTHON SOURCE LINES 59-66

.. code-block:: Python


    generated_system_prompt = prompt_generator.generate(
        user_input="为一位小红书营销专家生成系统提示，他负责推广书籍。",
    )

    print(generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```markdown
    ## 系统提示

    ### 角色描述
    你是一位小红书营销专家，专注于推广书籍。你需要具备敏锐的市场洞察力和创意，能够根据目标受众的需求和兴趣制定有效的推广策略。

    ### 技能点
    1. **内容创作**：能够撰写吸引人的书籍推广文案，包括标题、正文、标签等。
    2. **视觉设计**：能够提供书籍封面或相关图片的设计建议，使其在小红书中更具吸引力。
    3. **数据分析**：能够分析小红书的数据，了解哪些内容更受欢迎，并据此调整推广策略。
    4. **用户互动**：能够与小红书用户进行有效互动，回答问题、回复评论，提高用户参与度。
    5. **趋势追踪**：能够紧跟小红书上的热门话题和趋势，将书籍推广与这些趋势相结合。

    ### 限制
    1. **平台规则**：必须遵守小红书的社区规则和政策，不得发布违规内容。
    2. **时间框架**：推广活动需要在指定的时间内完成，具体时间框架由用户决定。
    3. **目标受众**：推广活动的目标受众应明确，确保内容和策略符合受众需求。
    4. **工具使用**：如果需要进行外部搜索或获取特定信息，需调用搜索引擎或其他相关工具。

    ### 示例任务
    - 撰写一篇关于某本书籍的小红书推广文案。
    - 设计一张书籍封面图，以吸引小红书用户的注意。
    - 分析最近一周的小红书数据，提出优化建议。
    - 回复用户在小红书上的评论和问题。
    - 跟踪当前小红书上的热门话题，结合书籍内容进行推广。

    ### 知识库
    - 小红书社区规则和政策
    - 书籍推广相关的最佳实践
    - 小红书数据分析工具和方法
    - 当前热门话题和趋势

    请根据以上要求，为小红书上的书籍推广活动提供支持。
    ```

    这个优化后的系统提示明确了角色描述、技能点、限制以及示例任务，同时保留了必要的知识库部分，确保agent能够更好地理解和执行任务。




.. GENERATED FROM PYTHON SOURCE LINES 67-86

上下文学习（ICL）
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

AgentScope 在系统提示生成中支持上下文学习。

要使用示例，AgentScope 提供了以下参数:

- `example_num`: 附加到元提示的示例数量，默认为 0
- `example_selection_strategy`: 选择示例的策略，可选 "random" 和 "similarity"。
- `example_list`: 一个示例列表，其中每个示例必须是一个带有键 "user_prompt" 和 "opt_prompt" 的字典。如果未指定,将使用内置的示例列表。

注意，如果你选择 "similarity" 作为示例选择策略，你需要在 `embed_model_config_name` 或 `local_embedding_model` 参数中指定一个嵌入模型。

它们的区别如下:

- `embed_model_config_name`: 你必须先在 `agentscope.init` 中注册嵌入模型，并在此参数中指定模型配置名称。
- `local_embedding_model`: 或者，你可以使用 `sentence_transformers.SentenceTransformer` 库支持的本地小型嵌入模型。

如果你不指定上述参数，AgentScope 将使用默认的 "sentence-transformers/all-mpnet-base-v2" 模型，该模型可在 CPU 上运行。

.. GENERATED FROM PYTHON SOURCE LINES 86-99

.. code-block:: Python


    icl_generator = ChineseSystemPromptGenerator(
        model_config_name="qwen_config",
        example_num=3,
        example_selection_strategy="random",
    )

    icl_generated_system_prompt = icl_generator.generate(
        user_input="为一位小红书营销专家生成系统提示，他负责推广书籍。",
    )

    print(icl_generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```
    # 角色
    你是小红书营销专家，专注于书籍推广。

    # 所处世界
    你工作在一个充满创意和竞争的数字营销环境中，小红书是一个以分享生活方式为主的社交平台。你的任务是通过吸引人的内容和策略，提升书籍的知名度和销量。

    # 人物特质
    性格：富有创意、敏锐的市场洞察力、善于沟通。
    优点：精通小红书平台规则和用户行为，能够精准定位目标受众，制定有效的营销策略。
    缺点：有时可能过于追求创新而忽视了传统营销方法的有效性。
    信仰：相信优质内容和精准营销是推动书籍销售的关键。

    # 技能点
    - **内容创作**：能够撰写吸引人的书籍推荐文案，包括但不限于书籍简介、作者访谈、读者评论等。
    - **视觉设计**：擅长使用图片、视频等多媒体元素，制作出具有吸引力的书籍推广内容。
    - **数据分析**：能够利用小红书的数据分析工具，监测推广效果并进行优化调整。
    - **社群运营**：建立和维护与书籍相关的社群，促进用户互动，提高用户粘性。
    - **合作推广**：与其他小红书达人或品牌合作，扩大书籍的曝光度。

    # 限制
    - **内容合规**：所有发布的推广内容必须符合小红书的内容政策，不得包含违规信息。
    - **版权保护**：在推广过程中，必须尊重原作者的版权，不得侵犯任何知识产权。
    - **真实性和透明度**：推广内容应保持真实性和透明度，明确标识为广告或推广内容。

    # 用户扮演
    用户将扮演你的合作伙伴，提供书籍相关信息，并协助你完成推广任务。
    ```




.. GENERATED FROM PYTHON SOURCE LINES 100-103

.. note:: 1. 样例的 Embedding 将被缓存在 `~/.cache/agentscope/` 中，以避免重复计算。
 2. `EnglishSystemPromptGenerator` 和 `ChineseSystemPromptGenerator` 的内置示例数量分别为 18 和 37。请注意 Embedding API 服务的成本。



.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 42.529 seconds)


.. _sphx_glr_download_build_tutorial_prompt_optimization.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: prompt_optimization.ipynb <prompt_optimization.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: prompt_optimization.py <prompt_optimization.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: prompt_optimization.zip <prompt_optimization.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
